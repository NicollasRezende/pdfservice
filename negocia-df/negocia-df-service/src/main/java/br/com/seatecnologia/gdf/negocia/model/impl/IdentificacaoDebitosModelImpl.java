/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package br.com.seatecnologia.gdf.negocia.model.impl;

import br.com.seatecnologia.gdf.negocia.model.IdentificacaoDebitos;
import br.com.seatecnologia.gdf.negocia.model.IdentificacaoDebitosModel;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the IdentificacaoDebitos service. Represents a row in the &quot;GDF_IdentificacaoDebitos&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>IdentificacaoDebitosModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link IdentificacaoDebitosImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see IdentificacaoDebitosImpl
 * @generated
 */
@JSON(strict = true)
public class IdentificacaoDebitosModelImpl
	extends BaseModelImpl<IdentificacaoDebitos>
	implements IdentificacaoDebitosModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a identificacao debitos model instance should use the <code>IdentificacaoDebitos</code> interface instead.
	 */
	public static final String TABLE_NAME = "GDF_IdentificacaoDebitos";

	public static final Object[][] TABLE_COLUMNS = {
		{"uuid_", Types.VARCHAR}, {"identificacaoDebitosId", Types.BIGINT},
		{"fundamentacaoId", Types.BIGINT}, {"natureza", Types.VARCHAR},
		{"situacao", Types.VARCHAR}, {"inscricaoDividaAtiva", Types.VARCHAR},
		{"garantidoJudicialmente", Types.VARCHAR}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("identificacaoDebitosId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("fundamentacaoId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("natureza", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("situacao", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("inscricaoDividaAtiva", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("garantidoJudicialmente", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE =
		"create table GDF_IdentificacaoDebitos (uuid_ VARCHAR(75) null,identificacaoDebitosId LONG not null primary key,fundamentacaoId LONG,natureza VARCHAR(255) null,situacao VARCHAR(255) null,inscricaoDividaAtiva VARCHAR(255) null,garantidoJudicialmente VARCHAR(255) null)";

	public static final String TABLE_SQL_DROP =
		"drop table GDF_IdentificacaoDebitos";

	public static final String ORDER_BY_JPQL =
		" ORDER BY identificacaoDebitos.identificacaoDebitosId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY GDF_IdentificacaoDebitos.identificacaoDebitosId ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long FUNDAMENTACAOID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long UUID_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long IDENTIFICACAODEBITOSID_COLUMN_BITMASK = 4L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public IdentificacaoDebitosModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _identificacaoDebitosId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setIdentificacaoDebitosId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _identificacaoDebitosId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return IdentificacaoDebitos.class;
	}

	@Override
	public String getModelClassName() {
		return IdentificacaoDebitos.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<IdentificacaoDebitos, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<IdentificacaoDebitos, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<IdentificacaoDebitos, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((IdentificacaoDebitos)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<IdentificacaoDebitos, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<IdentificacaoDebitos, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(IdentificacaoDebitos)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<IdentificacaoDebitos, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<IdentificacaoDebitos, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map<String, Function<IdentificacaoDebitos, Object>>
			_attributeGetterFunctions;

		static {
			Map<String, Function<IdentificacaoDebitos, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String, Function<IdentificacaoDebitos, Object>>();

			attributeGetterFunctions.put("uuid", IdentificacaoDebitos::getUuid);
			attributeGetterFunctions.put(
				"identificacaoDebitosId",
				IdentificacaoDebitos::getIdentificacaoDebitosId);
			attributeGetterFunctions.put(
				"fundamentacaoId", IdentificacaoDebitos::getFundamentacaoId);
			attributeGetterFunctions.put(
				"natureza", IdentificacaoDebitos::getNatureza);
			attributeGetterFunctions.put(
				"situacao", IdentificacaoDebitos::getSituacao);
			attributeGetterFunctions.put(
				"inscricaoDividaAtiva",
				IdentificacaoDebitos::getInscricaoDividaAtiva);
			attributeGetterFunctions.put(
				"garantidoJudicialmente",
				IdentificacaoDebitos::getGarantidoJudicialmente);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map
			<String, BiConsumer<IdentificacaoDebitos, Object>>
				_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<IdentificacaoDebitos, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap
						<String, BiConsumer<IdentificacaoDebitos, ?>>();

			attributeSetterBiConsumers.put(
				"uuid",
				(BiConsumer<IdentificacaoDebitos, String>)
					IdentificacaoDebitos::setUuid);
			attributeSetterBiConsumers.put(
				"identificacaoDebitosId",
				(BiConsumer<IdentificacaoDebitos, Long>)
					IdentificacaoDebitos::setIdentificacaoDebitosId);
			attributeSetterBiConsumers.put(
				"fundamentacaoId",
				(BiConsumer<IdentificacaoDebitos, Long>)
					IdentificacaoDebitos::setFundamentacaoId);
			attributeSetterBiConsumers.put(
				"natureza",
				(BiConsumer<IdentificacaoDebitos, String>)
					IdentificacaoDebitos::setNatureza);
			attributeSetterBiConsumers.put(
				"situacao",
				(BiConsumer<IdentificacaoDebitos, String>)
					IdentificacaoDebitos::setSituacao);
			attributeSetterBiConsumers.put(
				"inscricaoDividaAtiva",
				(BiConsumer<IdentificacaoDebitos, String>)
					IdentificacaoDebitos::setInscricaoDividaAtiva);
			attributeSetterBiConsumers.put(
				"garantidoJudicialmente",
				(BiConsumer<IdentificacaoDebitos, String>)
					IdentificacaoDebitos::setGarantidoJudicialmente);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_uuid = uuid;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalUuid() {
		return getColumnOriginalValue("uuid_");
	}

	@JSON
	@Override
	public long getIdentificacaoDebitosId() {
		return _identificacaoDebitosId;
	}

	@Override
	public void setIdentificacaoDebitosId(long identificacaoDebitosId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_identificacaoDebitosId = identificacaoDebitosId;
	}

	@JSON
	@Override
	public long getFundamentacaoId() {
		return _fundamentacaoId;
	}

	@Override
	public void setFundamentacaoId(long fundamentacaoId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_fundamentacaoId = fundamentacaoId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalFundamentacaoId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("fundamentacaoId"));
	}

	@JSON
	@Override
	public String getNatureza() {
		if (_natureza == null) {
			return "";
		}
		else {
			return _natureza;
		}
	}

	@Override
	public void setNatureza(String natureza) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_natureza = natureza;
	}

	@JSON
	@Override
	public String getSituacao() {
		if (_situacao == null) {
			return "";
		}
		else {
			return _situacao;
		}
	}

	@Override
	public void setSituacao(String situacao) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_situacao = situacao;
	}

	@JSON
	@Override
	public String getInscricaoDividaAtiva() {
		if (_inscricaoDividaAtiva == null) {
			return "";
		}
		else {
			return _inscricaoDividaAtiva;
		}
	}

	@Override
	public void setInscricaoDividaAtiva(String inscricaoDividaAtiva) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_inscricaoDividaAtiva = inscricaoDividaAtiva;
	}

	@JSON
	@Override
	public String getGarantidoJudicialmente() {
		if (_garantidoJudicialmente == null) {
			return "";
		}
		else {
			return _garantidoJudicialmente;
		}
	}

	@Override
	public void setGarantidoJudicialmente(String garantidoJudicialmente) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_garantidoJudicialmente = garantidoJudicialmente;
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			0, IdentificacaoDebitos.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public IdentificacaoDebitos toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, IdentificacaoDebitos>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		IdentificacaoDebitosImpl identificacaoDebitosImpl =
			new IdentificacaoDebitosImpl();

		identificacaoDebitosImpl.setUuid(getUuid());
		identificacaoDebitosImpl.setIdentificacaoDebitosId(
			getIdentificacaoDebitosId());
		identificacaoDebitosImpl.setFundamentacaoId(getFundamentacaoId());
		identificacaoDebitosImpl.setNatureza(getNatureza());
		identificacaoDebitosImpl.setSituacao(getSituacao());
		identificacaoDebitosImpl.setInscricaoDividaAtiva(
			getInscricaoDividaAtiva());
		identificacaoDebitosImpl.setGarantidoJudicialmente(
			getGarantidoJudicialmente());

		identificacaoDebitosImpl.resetOriginalValues();

		return identificacaoDebitosImpl;
	}

	@Override
	public IdentificacaoDebitos cloneWithOriginalValues() {
		IdentificacaoDebitosImpl identificacaoDebitosImpl =
			new IdentificacaoDebitosImpl();

		identificacaoDebitosImpl.setUuid(
			this.<String>getColumnOriginalValue("uuid_"));
		identificacaoDebitosImpl.setIdentificacaoDebitosId(
			this.<Long>getColumnOriginalValue("identificacaoDebitosId"));
		identificacaoDebitosImpl.setFundamentacaoId(
			this.<Long>getColumnOriginalValue("fundamentacaoId"));
		identificacaoDebitosImpl.setNatureza(
			this.<String>getColumnOriginalValue("natureza"));
		identificacaoDebitosImpl.setSituacao(
			this.<String>getColumnOriginalValue("situacao"));
		identificacaoDebitosImpl.setInscricaoDividaAtiva(
			this.<String>getColumnOriginalValue("inscricaoDividaAtiva"));
		identificacaoDebitosImpl.setGarantidoJudicialmente(
			this.<String>getColumnOriginalValue("garantidoJudicialmente"));

		return identificacaoDebitosImpl;
	}

	@Override
	public int compareTo(IdentificacaoDebitos identificacaoDebitos) {
		long primaryKey = identificacaoDebitos.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof IdentificacaoDebitos)) {
			return false;
		}

		IdentificacaoDebitos identificacaoDebitos =
			(IdentificacaoDebitos)object;

		long primaryKey = identificacaoDebitos.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<IdentificacaoDebitos> toCacheModel() {
		IdentificacaoDebitosCacheModel identificacaoDebitosCacheModel =
			new IdentificacaoDebitosCacheModel();

		identificacaoDebitosCacheModel.uuid = getUuid();

		String uuid = identificacaoDebitosCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			identificacaoDebitosCacheModel.uuid = null;
		}

		identificacaoDebitosCacheModel.identificacaoDebitosId =
			getIdentificacaoDebitosId();

		identificacaoDebitosCacheModel.fundamentacaoId = getFundamentacaoId();

		identificacaoDebitosCacheModel.natureza = getNatureza();

		String natureza = identificacaoDebitosCacheModel.natureza;

		if ((natureza != null) && (natureza.length() == 0)) {
			identificacaoDebitosCacheModel.natureza = null;
		}

		identificacaoDebitosCacheModel.situacao = getSituacao();

		String situacao = identificacaoDebitosCacheModel.situacao;

		if ((situacao != null) && (situacao.length() == 0)) {
			identificacaoDebitosCacheModel.situacao = null;
		}

		identificacaoDebitosCacheModel.inscricaoDividaAtiva =
			getInscricaoDividaAtiva();

		String inscricaoDividaAtiva =
			identificacaoDebitosCacheModel.inscricaoDividaAtiva;

		if ((inscricaoDividaAtiva != null) &&
			(inscricaoDividaAtiva.length() == 0)) {

			identificacaoDebitosCacheModel.inscricaoDividaAtiva = null;
		}

		identificacaoDebitosCacheModel.garantidoJudicialmente =
			getGarantidoJudicialmente();

		String garantidoJudicialmente =
			identificacaoDebitosCacheModel.garantidoJudicialmente;

		if ((garantidoJudicialmente != null) &&
			(garantidoJudicialmente.length() == 0)) {

			identificacaoDebitosCacheModel.garantidoJudicialmente = null;
		}

		return identificacaoDebitosCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<IdentificacaoDebitos, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<IdentificacaoDebitos, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<IdentificacaoDebitos, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(IdentificacaoDebitos)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, IdentificacaoDebitos>
			_escapedModelProxyProviderFunction =
				ProxyUtil.getProxyProviderFunction(
					IdentificacaoDebitos.class, ModelWrapper.class);

	}

	private String _uuid;
	private long _identificacaoDebitosId;
	private long _fundamentacaoId;
	private String _natureza;
	private String _situacao;
	private String _inscricaoDividaAtiva;
	private String _garantidoJudicialmente;

	public <T> T getColumnValue(String columnName) {
		columnName = _attributeNames.getOrDefault(columnName, columnName);

		Function<IdentificacaoDebitos, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((IdentificacaoDebitos)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("uuid_", _uuid);
		_columnOriginalValues.put(
			"identificacaoDebitosId", _identificacaoDebitosId);
		_columnOriginalValues.put("fundamentacaoId", _fundamentacaoId);
		_columnOriginalValues.put("natureza", _natureza);
		_columnOriginalValues.put("situacao", _situacao);
		_columnOriginalValues.put(
			"inscricaoDividaAtiva", _inscricaoDividaAtiva);
		_columnOriginalValues.put(
			"garantidoJudicialmente", _garantidoJudicialmente);
	}

	private static final Map<String, String> _attributeNames;

	static {
		Map<String, String> attributeNames = new HashMap<>();

		attributeNames.put("uuid_", "uuid");

		_attributeNames = Collections.unmodifiableMap(attributeNames);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("uuid_", 1L);

		columnBitmasks.put("identificacaoDebitosId", 2L);

		columnBitmasks.put("fundamentacaoId", 4L);

		columnBitmasks.put("natureza", 8L);

		columnBitmasks.put("situacao", 16L);

		columnBitmasks.put("inscricaoDividaAtiva", 32L);

		columnBitmasks.put("garantidoJudicialmente", 64L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private IdentificacaoDebitos _escapedModel;

}