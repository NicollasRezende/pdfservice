/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package br.com.seatecnologia.gdf.negocia.model.impl;

import br.com.seatecnologia.gdf.negocia.model.Garantia;
import br.com.seatecnologia.gdf.negocia.model.GarantiaModel;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the Garantia service. Represents a row in the &quot;GDF_Garantia&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>GarantiaModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link GarantiaImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see GarantiaImpl
 * @generated
 */
@JSON(strict = true)
public class GarantiaModelImpl
	extends BaseModelImpl<Garantia> implements GarantiaModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a garantia model instance should use the <code>Garantia</code> interface instead.
	 */
	public static final String TABLE_NAME = "GDF_Garantia";

	public static final Object[][] TABLE_COLUMNS = {
		{"uuid_", Types.VARCHAR}, {"garantiaId", Types.BIGINT},
		{"propostaId", Types.BIGINT}, {"tipoGarantia", Types.VARCHAR},
		{"tipoDevedor", Types.VARCHAR}, {"outras", Types.VARCHAR},
		{"descricaoBem", Types.VARCHAR},
		{"proprietarioQualificacao", Types.BIGINT},
		{"valorEstimado", Types.DOUBLE}, {"dadosRegistroId", Types.BIGINT},
		{"localizacao", Types.VARCHAR}, {"declaracaoAnuencia", Types.BOOLEAN},
		{"declaracao", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("garantiaId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("propostaId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("tipoGarantia", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("tipoDevedor", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("outras", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("descricaoBem", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("proprietarioQualificacao", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("valorEstimado", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("dadosRegistroId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("localizacao", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("declaracaoAnuencia", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("declaracao", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table GDF_Garantia (uuid_ VARCHAR(75) null,garantiaId LONG not null primary key,propostaId LONG,tipoGarantia VARCHAR(255) null,tipoDevedor VARCHAR(255) null,outras VARCHAR(255) null,descricaoBem VARCHAR(255) null,proprietarioQualificacao LONG,valorEstimado DOUBLE,dadosRegistroId LONG,localizacao VARCHAR(1000) null,declaracaoAnuencia BOOLEAN,declaracao LONG)";

	public static final String TABLE_SQL_DROP = "drop table GDF_Garantia";

	public static final String ORDER_BY_JPQL =
		" ORDER BY garantia.garantiaId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY GDF_Garantia.garantiaId ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long PROPOSTAID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long UUID_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long GARANTIAID_COLUMN_BITMASK = 4L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public GarantiaModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _garantiaId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setGarantiaId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _garantiaId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Garantia.class;
	}

	@Override
	public String getModelClassName() {
		return Garantia.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<Garantia, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		for (Map.Entry<String, Function<Garantia, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<Garantia, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName, attributeGetterFunction.apply((Garantia)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<Garantia, Object>> attributeSetterBiConsumers =
			getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<Garantia, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(Garantia)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<Garantia, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<Garantia, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map<String, Function<Garantia, Object>>
			_attributeGetterFunctions;

		static {
			Map<String, Function<Garantia, Object>> attributeGetterFunctions =
				new LinkedHashMap<String, Function<Garantia, Object>>();

			attributeGetterFunctions.put("uuid", Garantia::getUuid);
			attributeGetterFunctions.put("garantiaId", Garantia::getGarantiaId);
			attributeGetterFunctions.put("propostaId", Garantia::getPropostaId);
			attributeGetterFunctions.put(
				"tipoGarantia", Garantia::getTipoGarantia);
			attributeGetterFunctions.put(
				"tipoDevedor", Garantia::getTipoDevedor);
			attributeGetterFunctions.put("outras", Garantia::getOutras);
			attributeGetterFunctions.put(
				"descricaoBem", Garantia::getDescricaoBem);
			attributeGetterFunctions.put(
				"proprietarioQualificacao",
				Garantia::getProprietarioQualificacao);
			attributeGetterFunctions.put(
				"valorEstimado", Garantia::getValorEstimado);
			attributeGetterFunctions.put(
				"dadosRegistroId", Garantia::getDadosRegistroId);
			attributeGetterFunctions.put(
				"localizacao", Garantia::getLocalizacao);
			attributeGetterFunctions.put(
				"declaracaoAnuencia", Garantia::getDeclaracaoAnuencia);
			attributeGetterFunctions.put("declaracao", Garantia::getDeclaracao);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map<String, BiConsumer<Garantia, Object>>
			_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<Garantia, ?>> attributeSetterBiConsumers =
				new LinkedHashMap<String, BiConsumer<Garantia, ?>>();

			attributeSetterBiConsumers.put(
				"uuid", (BiConsumer<Garantia, String>)Garantia::setUuid);
			attributeSetterBiConsumers.put(
				"garantiaId",
				(BiConsumer<Garantia, Long>)Garantia::setGarantiaId);
			attributeSetterBiConsumers.put(
				"propostaId",
				(BiConsumer<Garantia, Long>)Garantia::setPropostaId);
			attributeSetterBiConsumers.put(
				"tipoGarantia",
				(BiConsumer<Garantia, String>)Garantia::setTipoGarantia);
			attributeSetterBiConsumers.put(
				"tipoDevedor",
				(BiConsumer<Garantia, String>)Garantia::setTipoDevedor);
			attributeSetterBiConsumers.put(
				"outras", (BiConsumer<Garantia, String>)Garantia::setOutras);
			attributeSetterBiConsumers.put(
				"descricaoBem",
				(BiConsumer<Garantia, String>)Garantia::setDescricaoBem);
			attributeSetterBiConsumers.put(
				"proprietarioQualificacao",
				(BiConsumer<Garantia, Long>)
					Garantia::setProprietarioQualificacao);
			attributeSetterBiConsumers.put(
				"valorEstimado",
				(BiConsumer<Garantia, Double>)Garantia::setValorEstimado);
			attributeSetterBiConsumers.put(
				"dadosRegistroId",
				(BiConsumer<Garantia, Long>)Garantia::setDadosRegistroId);
			attributeSetterBiConsumers.put(
				"localizacao",
				(BiConsumer<Garantia, String>)Garantia::setLocalizacao);
			attributeSetterBiConsumers.put(
				"declaracaoAnuencia",
				(BiConsumer<Garantia, Boolean>)Garantia::setDeclaracaoAnuencia);
			attributeSetterBiConsumers.put(
				"declaracao",
				(BiConsumer<Garantia, Long>)Garantia::setDeclaracao);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_uuid = uuid;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalUuid() {
		return getColumnOriginalValue("uuid_");
	}

	@JSON
	@Override
	public long getGarantiaId() {
		return _garantiaId;
	}

	@Override
	public void setGarantiaId(long garantiaId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_garantiaId = garantiaId;
	}

	@JSON
	@Override
	public long getPropostaId() {
		return _propostaId;
	}

	@Override
	public void setPropostaId(long propostaId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_propostaId = propostaId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalPropostaId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("propostaId"));
	}

	@JSON
	@Override
	public String getTipoGarantia() {
		if (_tipoGarantia == null) {
			return "";
		}
		else {
			return _tipoGarantia;
		}
	}

	@Override
	public void setTipoGarantia(String tipoGarantia) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tipoGarantia = tipoGarantia;
	}

	@JSON
	@Override
	public String getTipoDevedor() {
		if (_tipoDevedor == null) {
			return "";
		}
		else {
			return _tipoDevedor;
		}
	}

	@Override
	public void setTipoDevedor(String tipoDevedor) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tipoDevedor = tipoDevedor;
	}

	@JSON
	@Override
	public String getOutras() {
		if (_outras == null) {
			return "";
		}
		else {
			return _outras;
		}
	}

	@Override
	public void setOutras(String outras) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_outras = outras;
	}

	@JSON
	@Override
	public String getDescricaoBem() {
		if (_descricaoBem == null) {
			return "";
		}
		else {
			return _descricaoBem;
		}
	}

	@Override
	public void setDescricaoBem(String descricaoBem) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_descricaoBem = descricaoBem;
	}

	@JSON
	@Override
	public long getProprietarioQualificacao() {
		return _proprietarioQualificacao;
	}

	@Override
	public void setProprietarioQualificacao(long proprietarioQualificacao) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_proprietarioQualificacao = proprietarioQualificacao;
	}

	@JSON
	@Override
	public double getValorEstimado() {
		return _valorEstimado;
	}

	@Override
	public void setValorEstimado(double valorEstimado) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_valorEstimado = valorEstimado;
	}

	@JSON
	@Override
	public long getDadosRegistroId() {
		return _dadosRegistroId;
	}

	@Override
	public void setDadosRegistroId(long dadosRegistroId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_dadosRegistroId = dadosRegistroId;
	}

	@JSON
	@Override
	public String getLocalizacao() {
		if (_localizacao == null) {
			return "";
		}
		else {
			return _localizacao;
		}
	}

	@Override
	public void setLocalizacao(String localizacao) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_localizacao = localizacao;
	}

	@JSON
	@Override
	public boolean getDeclaracaoAnuencia() {
		return _declaracaoAnuencia;
	}

	@JSON
	@Override
	public boolean isDeclaracaoAnuencia() {
		return _declaracaoAnuencia;
	}

	@Override
	public void setDeclaracaoAnuencia(boolean declaracaoAnuencia) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_declaracaoAnuencia = declaracaoAnuencia;
	}

	@JSON
	@Override
	public long getDeclaracao() {
		return _declaracao;
	}

	@Override
	public void setDeclaracao(long declaracao) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_declaracao = declaracao;
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			0, Garantia.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Garantia toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, Garantia>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		GarantiaImpl garantiaImpl = new GarantiaImpl();

		garantiaImpl.setUuid(getUuid());
		garantiaImpl.setGarantiaId(getGarantiaId());
		garantiaImpl.setPropostaId(getPropostaId());
		garantiaImpl.setTipoGarantia(getTipoGarantia());
		garantiaImpl.setTipoDevedor(getTipoDevedor());
		garantiaImpl.setOutras(getOutras());
		garantiaImpl.setDescricaoBem(getDescricaoBem());
		garantiaImpl.setProprietarioQualificacao(getProprietarioQualificacao());
		garantiaImpl.setValorEstimado(getValorEstimado());
		garantiaImpl.setDadosRegistroId(getDadosRegistroId());
		garantiaImpl.setLocalizacao(getLocalizacao());
		garantiaImpl.setDeclaracaoAnuencia(isDeclaracaoAnuencia());
		garantiaImpl.setDeclaracao(getDeclaracao());

		garantiaImpl.resetOriginalValues();

		return garantiaImpl;
	}

	@Override
	public Garantia cloneWithOriginalValues() {
		GarantiaImpl garantiaImpl = new GarantiaImpl();

		garantiaImpl.setUuid(this.<String>getColumnOriginalValue("uuid_"));
		garantiaImpl.setGarantiaId(
			this.<Long>getColumnOriginalValue("garantiaId"));
		garantiaImpl.setPropostaId(
			this.<Long>getColumnOriginalValue("propostaId"));
		garantiaImpl.setTipoGarantia(
			this.<String>getColumnOriginalValue("tipoGarantia"));
		garantiaImpl.setTipoDevedor(
			this.<String>getColumnOriginalValue("tipoDevedor"));
		garantiaImpl.setOutras(this.<String>getColumnOriginalValue("outras"));
		garantiaImpl.setDescricaoBem(
			this.<String>getColumnOriginalValue("descricaoBem"));
		garantiaImpl.setProprietarioQualificacao(
			this.<Long>getColumnOriginalValue("proprietarioQualificacao"));
		garantiaImpl.setValorEstimado(
			this.<Double>getColumnOriginalValue("valorEstimado"));
		garantiaImpl.setDadosRegistroId(
			this.<Long>getColumnOriginalValue("dadosRegistroId"));
		garantiaImpl.setLocalizacao(
			this.<String>getColumnOriginalValue("localizacao"));
		garantiaImpl.setDeclaracaoAnuencia(
			this.<Boolean>getColumnOriginalValue("declaracaoAnuencia"));
		garantiaImpl.setDeclaracao(
			this.<Long>getColumnOriginalValue("declaracao"));

		return garantiaImpl;
	}

	@Override
	public int compareTo(Garantia garantia) {
		long primaryKey = garantia.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof Garantia)) {
			return false;
		}

		Garantia garantia = (Garantia)object;

		long primaryKey = garantia.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<Garantia> toCacheModel() {
		GarantiaCacheModel garantiaCacheModel = new GarantiaCacheModel();

		garantiaCacheModel.uuid = getUuid();

		String uuid = garantiaCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			garantiaCacheModel.uuid = null;
		}

		garantiaCacheModel.garantiaId = getGarantiaId();

		garantiaCacheModel.propostaId = getPropostaId();

		garantiaCacheModel.tipoGarantia = getTipoGarantia();

		String tipoGarantia = garantiaCacheModel.tipoGarantia;

		if ((tipoGarantia != null) && (tipoGarantia.length() == 0)) {
			garantiaCacheModel.tipoGarantia = null;
		}

		garantiaCacheModel.tipoDevedor = getTipoDevedor();

		String tipoDevedor = garantiaCacheModel.tipoDevedor;

		if ((tipoDevedor != null) && (tipoDevedor.length() == 0)) {
			garantiaCacheModel.tipoDevedor = null;
		}

		garantiaCacheModel.outras = getOutras();

		String outras = garantiaCacheModel.outras;

		if ((outras != null) && (outras.length() == 0)) {
			garantiaCacheModel.outras = null;
		}

		garantiaCacheModel.descricaoBem = getDescricaoBem();

		String descricaoBem = garantiaCacheModel.descricaoBem;

		if ((descricaoBem != null) && (descricaoBem.length() == 0)) {
			garantiaCacheModel.descricaoBem = null;
		}

		garantiaCacheModel.proprietarioQualificacao =
			getProprietarioQualificacao();

		garantiaCacheModel.valorEstimado = getValorEstimado();

		garantiaCacheModel.dadosRegistroId = getDadosRegistroId();

		garantiaCacheModel.localizacao = getLocalizacao();

		String localizacao = garantiaCacheModel.localizacao;

		if ((localizacao != null) && (localizacao.length() == 0)) {
			garantiaCacheModel.localizacao = null;
		}

		garantiaCacheModel.declaracaoAnuencia = isDeclaracaoAnuencia();

		garantiaCacheModel.declaracao = getDeclaracao();

		return garantiaCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<Garantia, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<Garantia, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<Garantia, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply((Garantia)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, Garantia>
			_escapedModelProxyProviderFunction =
				ProxyUtil.getProxyProviderFunction(
					Garantia.class, ModelWrapper.class);

	}

	private String _uuid;
	private long _garantiaId;
	private long _propostaId;
	private String _tipoGarantia;
	private String _tipoDevedor;
	private String _outras;
	private String _descricaoBem;
	private long _proprietarioQualificacao;
	private double _valorEstimado;
	private long _dadosRegistroId;
	private String _localizacao;
	private boolean _declaracaoAnuencia;
	private long _declaracao;

	public <T> T getColumnValue(String columnName) {
		columnName = _attributeNames.getOrDefault(columnName, columnName);

		Function<Garantia, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((Garantia)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("uuid_", _uuid);
		_columnOriginalValues.put("garantiaId", _garantiaId);
		_columnOriginalValues.put("propostaId", _propostaId);
		_columnOriginalValues.put("tipoGarantia", _tipoGarantia);
		_columnOriginalValues.put("tipoDevedor", _tipoDevedor);
		_columnOriginalValues.put("outras", _outras);
		_columnOriginalValues.put("descricaoBem", _descricaoBem);
		_columnOriginalValues.put(
			"proprietarioQualificacao", _proprietarioQualificacao);
		_columnOriginalValues.put("valorEstimado", _valorEstimado);
		_columnOriginalValues.put("dadosRegistroId", _dadosRegistroId);
		_columnOriginalValues.put("localizacao", _localizacao);
		_columnOriginalValues.put("declaracaoAnuencia", _declaracaoAnuencia);
		_columnOriginalValues.put("declaracao", _declaracao);
	}

	private static final Map<String, String> _attributeNames;

	static {
		Map<String, String> attributeNames = new HashMap<>();

		attributeNames.put("uuid_", "uuid");

		_attributeNames = Collections.unmodifiableMap(attributeNames);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("uuid_", 1L);

		columnBitmasks.put("garantiaId", 2L);

		columnBitmasks.put("propostaId", 4L);

		columnBitmasks.put("tipoGarantia", 8L);

		columnBitmasks.put("tipoDevedor", 16L);

		columnBitmasks.put("outras", 32L);

		columnBitmasks.put("descricaoBem", 64L);

		columnBitmasks.put("proprietarioQualificacao", 128L);

		columnBitmasks.put("valorEstimado", 256L);

		columnBitmasks.put("dadosRegistroId", 512L);

		columnBitmasks.put("localizacao", 1024L);

		columnBitmasks.put("declaracaoAnuencia", 2048L);

		columnBitmasks.put("declaracao", 4096L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private Garantia _escapedModel;

}