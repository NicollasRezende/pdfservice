/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package br.com.seatecnologia.gdf.negocia.model.impl;

import br.com.seatecnologia.gdf.negocia.model.Proposta;
import br.com.seatecnologia.gdf.negocia.model.PropostaModel;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.exportimport.kernel.lar.StagedModelType;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the Proposta service. Represents a row in the &quot;GDF_Proposta&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>PropostaModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PropostaImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see PropostaImpl
 * @generated
 */
@JSON(strict = true)
public class PropostaModelImpl
	extends BaseModelImpl<Proposta> implements PropostaModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a proposta model instance should use the <code>Proposta</code> interface instead.
	 */
	public static final String TABLE_NAME = "GDF_Proposta";

	public static final Object[][] TABLE_COLUMNS = {
		{"uuid_", Types.VARCHAR}, {"propostaId", Types.BIGINT},
		{"groupId", Types.BIGINT}, {"companyId", Types.BIGINT},
		{"userId", Types.BIGINT}, {"userName", Types.VARCHAR},
		{"createDate", Types.TIMESTAMP}, {"modifiedDate", Types.TIMESTAMP},
		{"tipoProposta", Types.VARCHAR}, {"editalId", Types.BIGINT},
		{"qualificacaoId", Types.BIGINT},
		{"administradorJudicialId", Types.BIGINT}, {"advogadoId", Types.BIGINT},
		{"fundamentacaoPedidoId", Types.BIGINT}, {"procuracao", Types.BIGINT},
		{"cpfCnpj", Types.VARCHAR}, {"status", Types.VARCHAR},
		{"numeroProtocoloSei", Types.VARCHAR}, {"protocolo", Types.VARCHAR},
		{"documentosCompletosURL", Types.VARCHAR},
		{"propostaPaiId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("propostaId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("tipoProposta", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("editalId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("qualificacaoId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("administradorJudicialId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("advogadoId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("fundamentacaoPedidoId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("procuracao", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("cpfCnpj", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("status", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("numeroProtocoloSei", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("protocolo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("documentosCompletosURL", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("propostaPaiId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table GDF_Proposta (uuid_ VARCHAR(75) null,propostaId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,tipoProposta VARCHAR(255) null,editalId LONG,qualificacaoId LONG,administradorJudicialId LONG,advogadoId LONG,fundamentacaoPedidoId LONG,procuracao LONG,cpfCnpj VARCHAR(255) null,status VARCHAR(255) null,numeroProtocoloSei VARCHAR(255) null,protocolo VARCHAR(255) null,documentosCompletosURL VARCHAR(500) null,propostaPaiId LONG)";

	public static final String TABLE_SQL_DROP = "drop table GDF_Proposta";

	public static final String ORDER_BY_JPQL =
		" ORDER BY proposta.propostaId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY GDF_Proposta.propostaId ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long COMPANYID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long CPFCNPJ_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long GROUPID_COLUMN_BITMASK = 4L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long UUID_COLUMN_BITMASK = 8L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long PROPOSTAID_COLUMN_BITMASK = 16L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public PropostaModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _propostaId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setPropostaId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _propostaId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Proposta.class;
	}

	@Override
	public String getModelClassName() {
		return Proposta.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<Proposta, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		for (Map.Entry<String, Function<Proposta, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<Proposta, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName, attributeGetterFunction.apply((Proposta)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<Proposta, Object>> attributeSetterBiConsumers =
			getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<Proposta, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(Proposta)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<Proposta, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<Proposta, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map<String, Function<Proposta, Object>>
			_attributeGetterFunctions;

		static {
			Map<String, Function<Proposta, Object>> attributeGetterFunctions =
				new LinkedHashMap<String, Function<Proposta, Object>>();

			attributeGetterFunctions.put("uuid", Proposta::getUuid);
			attributeGetterFunctions.put("propostaId", Proposta::getPropostaId);
			attributeGetterFunctions.put("groupId", Proposta::getGroupId);
			attributeGetterFunctions.put("companyId", Proposta::getCompanyId);
			attributeGetterFunctions.put("userId", Proposta::getUserId);
			attributeGetterFunctions.put("userName", Proposta::getUserName);
			attributeGetterFunctions.put("createDate", Proposta::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate", Proposta::getModifiedDate);
			attributeGetterFunctions.put(
				"tipoProposta", Proposta::getTipoProposta);
			attributeGetterFunctions.put("editalId", Proposta::getEditalId);
			attributeGetterFunctions.put(
				"qualificacaoId", Proposta::getQualificacaoId);
			attributeGetterFunctions.put(
				"administradorJudicialId",
				Proposta::getAdministradorJudicialId);
			attributeGetterFunctions.put("advogadoId", Proposta::getAdvogadoId);
			attributeGetterFunctions.put(
				"fundamentacaoPedidoId", Proposta::getFundamentacaoPedidoId);
			attributeGetterFunctions.put("procuracao", Proposta::getProcuracao);
			attributeGetterFunctions.put("cpfCnpj", Proposta::getCpfCnpj);
			attributeGetterFunctions.put("status", Proposta::getStatus);
			attributeGetterFunctions.put(
				"numeroProtocoloSei", Proposta::getNumeroProtocoloSei);
			attributeGetterFunctions.put("protocolo", Proposta::getProtocolo);
			attributeGetterFunctions.put(
				"documentosCompletosURL", Proposta::getDocumentosCompletosURL);
			attributeGetterFunctions.put(
				"propostaPaiId", Proposta::getPropostaPaiId);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map<String, BiConsumer<Proposta, Object>>
			_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<Proposta, ?>> attributeSetterBiConsumers =
				new LinkedHashMap<String, BiConsumer<Proposta, ?>>();

			attributeSetterBiConsumers.put(
				"uuid", (BiConsumer<Proposta, String>)Proposta::setUuid);
			attributeSetterBiConsumers.put(
				"propostaId",
				(BiConsumer<Proposta, Long>)Proposta::setPropostaId);
			attributeSetterBiConsumers.put(
				"groupId", (BiConsumer<Proposta, Long>)Proposta::setGroupId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<Proposta, Long>)Proposta::setCompanyId);
			attributeSetterBiConsumers.put(
				"userId", (BiConsumer<Proposta, Long>)Proposta::setUserId);
			attributeSetterBiConsumers.put(
				"userName",
				(BiConsumer<Proposta, String>)Proposta::setUserName);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<Proposta, Date>)Proposta::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<Proposta, Date>)Proposta::setModifiedDate);
			attributeSetterBiConsumers.put(
				"tipoProposta",
				(BiConsumer<Proposta, String>)Proposta::setTipoProposta);
			attributeSetterBiConsumers.put(
				"editalId", (BiConsumer<Proposta, Long>)Proposta::setEditalId);
			attributeSetterBiConsumers.put(
				"qualificacaoId",
				(BiConsumer<Proposta, Long>)Proposta::setQualificacaoId);
			attributeSetterBiConsumers.put(
				"administradorJudicialId",
				(BiConsumer<Proposta, Long>)
					Proposta::setAdministradorJudicialId);
			attributeSetterBiConsumers.put(
				"advogadoId",
				(BiConsumer<Proposta, Long>)Proposta::setAdvogadoId);
			attributeSetterBiConsumers.put(
				"fundamentacaoPedidoId",
				(BiConsumer<Proposta, Long>)Proposta::setFundamentacaoPedidoId);
			attributeSetterBiConsumers.put(
				"procuracao",
				(BiConsumer<Proposta, Long>)Proposta::setProcuracao);
			attributeSetterBiConsumers.put(
				"cpfCnpj", (BiConsumer<Proposta, String>)Proposta::setCpfCnpj);
			attributeSetterBiConsumers.put(
				"status", (BiConsumer<Proposta, String>)Proposta::setStatus);
			attributeSetterBiConsumers.put(
				"numeroProtocoloSei",
				(BiConsumer<Proposta, String>)Proposta::setNumeroProtocoloSei);
			attributeSetterBiConsumers.put(
				"protocolo",
				(BiConsumer<Proposta, String>)Proposta::setProtocolo);
			attributeSetterBiConsumers.put(
				"documentosCompletosURL",
				(BiConsumer<Proposta, String>)
					Proposta::setDocumentosCompletosURL);
			attributeSetterBiConsumers.put(
				"propostaPaiId",
				(BiConsumer<Proposta, Long>)Proposta::setPropostaPaiId);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_uuid = uuid;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalUuid() {
		return getColumnOriginalValue("uuid_");
	}

	@JSON
	@Override
	public long getPropostaId() {
		return _propostaId;
	}

	@Override
	public void setPropostaId(long propostaId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_propostaId = propostaId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalGroupId() {
		return GetterUtil.getLong(this.<Long>getColumnOriginalValue("groupId"));
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalCompanyId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("companyId"));
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getTipoProposta() {
		if (_tipoProposta == null) {
			return "";
		}
		else {
			return _tipoProposta;
		}
	}

	@Override
	public void setTipoProposta(String tipoProposta) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tipoProposta = tipoProposta;
	}

	@JSON
	@Override
	public long getEditalId() {
		return _editalId;
	}

	@Override
	public void setEditalId(long editalId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_editalId = editalId;
	}

	@JSON
	@Override
	public long getQualificacaoId() {
		return _qualificacaoId;
	}

	@Override
	public void setQualificacaoId(long qualificacaoId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_qualificacaoId = qualificacaoId;
	}

	@JSON
	@Override
	public long getAdministradorJudicialId() {
		return _administradorJudicialId;
	}

	@Override
	public void setAdministradorJudicialId(long administradorJudicialId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_administradorJudicialId = administradorJudicialId;
	}

	@JSON
	@Override
	public long getAdvogadoId() {
		return _advogadoId;
	}

	@Override
	public void setAdvogadoId(long advogadoId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_advogadoId = advogadoId;
	}

	@JSON
	@Override
	public long getFundamentacaoPedidoId() {
		return _fundamentacaoPedidoId;
	}

	@Override
	public void setFundamentacaoPedidoId(long fundamentacaoPedidoId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_fundamentacaoPedidoId = fundamentacaoPedidoId;
	}

	@JSON
	@Override
	public long getProcuracao() {
		return _procuracao;
	}

	@Override
	public void setProcuracao(long procuracao) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_procuracao = procuracao;
	}

	@JSON
	@Override
	public String getCpfCnpj() {
		if (_cpfCnpj == null) {
			return "";
		}
		else {
			return _cpfCnpj;
		}
	}

	@Override
	public void setCpfCnpj(String cpfCnpj) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_cpfCnpj = cpfCnpj;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalCpfCnpj() {
		return getColumnOriginalValue("cpfCnpj");
	}

	@JSON
	@Override
	public String getStatus() {
		if (_status == null) {
			return "";
		}
		else {
			return _status;
		}
	}

	@Override
	public void setStatus(String status) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_status = status;
	}

	@JSON
	@Override
	public String getNumeroProtocoloSei() {
		if (_numeroProtocoloSei == null) {
			return "";
		}
		else {
			return _numeroProtocoloSei;
		}
	}

	@Override
	public void setNumeroProtocoloSei(String numeroProtocoloSei) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_numeroProtocoloSei = numeroProtocoloSei;
	}

	@JSON
	@Override
	public String getProtocolo() {
		if (_protocolo == null) {
			return "";
		}
		else {
			return _protocolo;
		}
	}

	@Override
	public void setProtocolo(String protocolo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_protocolo = protocolo;
	}

	@JSON
	@Override
	public String getDocumentosCompletosURL() {
		if (_documentosCompletosURL == null) {
			return "";
		}
		else {
			return _documentosCompletosURL;
		}
	}

	@Override
	public void setDocumentosCompletosURL(String documentosCompletosURL) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_documentosCompletosURL = documentosCompletosURL;
	}

	@JSON
	@Override
	public long getPropostaPaiId() {
		return _propostaPaiId;
	}

	@Override
	public void setPropostaPaiId(long propostaPaiId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_propostaPaiId = propostaPaiId;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(
			PortalUtil.getClassNameId(Proposta.class.getName()));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), Proposta.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Proposta toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, Proposta>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		PropostaImpl propostaImpl = new PropostaImpl();

		propostaImpl.setUuid(getUuid());
		propostaImpl.setPropostaId(getPropostaId());
		propostaImpl.setGroupId(getGroupId());
		propostaImpl.setCompanyId(getCompanyId());
		propostaImpl.setUserId(getUserId());
		propostaImpl.setUserName(getUserName());
		propostaImpl.setCreateDate(getCreateDate());
		propostaImpl.setModifiedDate(getModifiedDate());
		propostaImpl.setTipoProposta(getTipoProposta());
		propostaImpl.setEditalId(getEditalId());
		propostaImpl.setQualificacaoId(getQualificacaoId());
		propostaImpl.setAdministradorJudicialId(getAdministradorJudicialId());
		propostaImpl.setAdvogadoId(getAdvogadoId());
		propostaImpl.setFundamentacaoPedidoId(getFundamentacaoPedidoId());
		propostaImpl.setProcuracao(getProcuracao());
		propostaImpl.setCpfCnpj(getCpfCnpj());
		propostaImpl.setStatus(getStatus());
		propostaImpl.setNumeroProtocoloSei(getNumeroProtocoloSei());
		propostaImpl.setProtocolo(getProtocolo());
		propostaImpl.setDocumentosCompletosURL(getDocumentosCompletosURL());
		propostaImpl.setPropostaPaiId(getPropostaPaiId());

		propostaImpl.resetOriginalValues();

		return propostaImpl;
	}

	@Override
	public Proposta cloneWithOriginalValues() {
		PropostaImpl propostaImpl = new PropostaImpl();

		propostaImpl.setUuid(this.<String>getColumnOriginalValue("uuid_"));
		propostaImpl.setPropostaId(
			this.<Long>getColumnOriginalValue("propostaId"));
		propostaImpl.setGroupId(this.<Long>getColumnOriginalValue("groupId"));
		propostaImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		propostaImpl.setUserId(this.<Long>getColumnOriginalValue("userId"));
		propostaImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		propostaImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		propostaImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		propostaImpl.setTipoProposta(
			this.<String>getColumnOriginalValue("tipoProposta"));
		propostaImpl.setEditalId(this.<Long>getColumnOriginalValue("editalId"));
		propostaImpl.setQualificacaoId(
			this.<Long>getColumnOriginalValue("qualificacaoId"));
		propostaImpl.setAdministradorJudicialId(
			this.<Long>getColumnOriginalValue("administradorJudicialId"));
		propostaImpl.setAdvogadoId(
			this.<Long>getColumnOriginalValue("advogadoId"));
		propostaImpl.setFundamentacaoPedidoId(
			this.<Long>getColumnOriginalValue("fundamentacaoPedidoId"));
		propostaImpl.setProcuracao(
			this.<Long>getColumnOriginalValue("procuracao"));
		propostaImpl.setCpfCnpj(this.<String>getColumnOriginalValue("cpfCnpj"));
		propostaImpl.setStatus(this.<String>getColumnOriginalValue("status"));
		propostaImpl.setNumeroProtocoloSei(
			this.<String>getColumnOriginalValue("numeroProtocoloSei"));
		propostaImpl.setProtocolo(
			this.<String>getColumnOriginalValue("protocolo"));
		propostaImpl.setDocumentosCompletosURL(
			this.<String>getColumnOriginalValue("documentosCompletosURL"));
		propostaImpl.setPropostaPaiId(
			this.<Long>getColumnOriginalValue("propostaPaiId"));

		return propostaImpl;
	}

	@Override
	public int compareTo(Proposta proposta) {
		long primaryKey = proposta.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof Proposta)) {
			return false;
		}

		Proposta proposta = (Proposta)object;

		long primaryKey = proposta.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<Proposta> toCacheModel() {
		PropostaCacheModel propostaCacheModel = new PropostaCacheModel();

		propostaCacheModel.uuid = getUuid();

		String uuid = propostaCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			propostaCacheModel.uuid = null;
		}

		propostaCacheModel.propostaId = getPropostaId();

		propostaCacheModel.groupId = getGroupId();

		propostaCacheModel.companyId = getCompanyId();

		propostaCacheModel.userId = getUserId();

		propostaCacheModel.userName = getUserName();

		String userName = propostaCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			propostaCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			propostaCacheModel.createDate = createDate.getTime();
		}
		else {
			propostaCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			propostaCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			propostaCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		propostaCacheModel.tipoProposta = getTipoProposta();

		String tipoProposta = propostaCacheModel.tipoProposta;

		if ((tipoProposta != null) && (tipoProposta.length() == 0)) {
			propostaCacheModel.tipoProposta = null;
		}

		propostaCacheModel.editalId = getEditalId();

		propostaCacheModel.qualificacaoId = getQualificacaoId();

		propostaCacheModel.administradorJudicialId =
			getAdministradorJudicialId();

		propostaCacheModel.advogadoId = getAdvogadoId();

		propostaCacheModel.fundamentacaoPedidoId = getFundamentacaoPedidoId();

		propostaCacheModel.procuracao = getProcuracao();

		propostaCacheModel.cpfCnpj = getCpfCnpj();

		String cpfCnpj = propostaCacheModel.cpfCnpj;

		if ((cpfCnpj != null) && (cpfCnpj.length() == 0)) {
			propostaCacheModel.cpfCnpj = null;
		}

		propostaCacheModel.status = getStatus();

		String status = propostaCacheModel.status;

		if ((status != null) && (status.length() == 0)) {
			propostaCacheModel.status = null;
		}

		propostaCacheModel.numeroProtocoloSei = getNumeroProtocoloSei();

		String numeroProtocoloSei = propostaCacheModel.numeroProtocoloSei;

		if ((numeroProtocoloSei != null) &&
			(numeroProtocoloSei.length() == 0)) {

			propostaCacheModel.numeroProtocoloSei = null;
		}

		propostaCacheModel.protocolo = getProtocolo();

		String protocolo = propostaCacheModel.protocolo;

		if ((protocolo != null) && (protocolo.length() == 0)) {
			propostaCacheModel.protocolo = null;
		}

		propostaCacheModel.documentosCompletosURL = getDocumentosCompletosURL();

		String documentosCompletosURL =
			propostaCacheModel.documentosCompletosURL;

		if ((documentosCompletosURL != null) &&
			(documentosCompletosURL.length() == 0)) {

			propostaCacheModel.documentosCompletosURL = null;
		}

		propostaCacheModel.propostaPaiId = getPropostaPaiId();

		return propostaCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<Proposta, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<Proposta, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<Proposta, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply((Proposta)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, Proposta>
			_escapedModelProxyProviderFunction =
				ProxyUtil.getProxyProviderFunction(
					Proposta.class, ModelWrapper.class);

	}

	private String _uuid;
	private long _propostaId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _tipoProposta;
	private long _editalId;
	private long _qualificacaoId;
	private long _administradorJudicialId;
	private long _advogadoId;
	private long _fundamentacaoPedidoId;
	private long _procuracao;
	private String _cpfCnpj;
	private String _status;
	private String _numeroProtocoloSei;
	private String _protocolo;
	private String _documentosCompletosURL;
	private long _propostaPaiId;

	public <T> T getColumnValue(String columnName) {
		columnName = _attributeNames.getOrDefault(columnName, columnName);

		Function<Proposta, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((Proposta)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("uuid_", _uuid);
		_columnOriginalValues.put("propostaId", _propostaId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put("tipoProposta", _tipoProposta);
		_columnOriginalValues.put("editalId", _editalId);
		_columnOriginalValues.put("qualificacaoId", _qualificacaoId);
		_columnOriginalValues.put(
			"administradorJudicialId", _administradorJudicialId);
		_columnOriginalValues.put("advogadoId", _advogadoId);
		_columnOriginalValues.put(
			"fundamentacaoPedidoId", _fundamentacaoPedidoId);
		_columnOriginalValues.put("procuracao", _procuracao);
		_columnOriginalValues.put("cpfCnpj", _cpfCnpj);
		_columnOriginalValues.put("status", _status);
		_columnOriginalValues.put("numeroProtocoloSei", _numeroProtocoloSei);
		_columnOriginalValues.put("protocolo", _protocolo);
		_columnOriginalValues.put(
			"documentosCompletosURL", _documentosCompletosURL);
		_columnOriginalValues.put("propostaPaiId", _propostaPaiId);
	}

	private static final Map<String, String> _attributeNames;

	static {
		Map<String, String> attributeNames = new HashMap<>();

		attributeNames.put("uuid_", "uuid");

		_attributeNames = Collections.unmodifiableMap(attributeNames);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("uuid_", 1L);

		columnBitmasks.put("propostaId", 2L);

		columnBitmasks.put("groupId", 4L);

		columnBitmasks.put("companyId", 8L);

		columnBitmasks.put("userId", 16L);

		columnBitmasks.put("userName", 32L);

		columnBitmasks.put("createDate", 64L);

		columnBitmasks.put("modifiedDate", 128L);

		columnBitmasks.put("tipoProposta", 256L);

		columnBitmasks.put("editalId", 512L);

		columnBitmasks.put("qualificacaoId", 1024L);

		columnBitmasks.put("administradorJudicialId", 2048L);

		columnBitmasks.put("advogadoId", 4096L);

		columnBitmasks.put("fundamentacaoPedidoId", 8192L);

		columnBitmasks.put("procuracao", 16384L);

		columnBitmasks.put("cpfCnpj", 32768L);

		columnBitmasks.put("status", 65536L);

		columnBitmasks.put("numeroProtocoloSei", 131072L);

		columnBitmasks.put("protocolo", 262144L);

		columnBitmasks.put("documentosCompletosURL", 524288L);

		columnBitmasks.put("propostaPaiId", 1048576L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private Proposta _escapedModel;

}