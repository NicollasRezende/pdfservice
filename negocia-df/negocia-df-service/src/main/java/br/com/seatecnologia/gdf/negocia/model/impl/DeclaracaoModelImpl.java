/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package br.com.seatecnologia.gdf.negocia.model.impl;

import br.com.seatecnologia.gdf.negocia.model.Declaracao;
import br.com.seatecnologia.gdf.negocia.model.DeclaracaoModel;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the Declaracao service. Represents a row in the &quot;GDF_Declaracao&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>DeclaracaoModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link DeclaracaoImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see DeclaracaoImpl
 * @generated
 */
@JSON(strict = true)
public class DeclaracaoModelImpl
	extends BaseModelImpl<Declaracao> implements DeclaracaoModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a declaracao model instance should use the <code>Declaracao</code> interface instead.
	 */
	public static final String TABLE_NAME = "GDF_Declaracao";

	public static final Object[][] TABLE_COLUMNS = {
		{"uuid_", Types.VARCHAR}, {"declaracaoId", Types.BIGINT},
		{"propostaId", Types.BIGINT}, {"cumpreCompromissos", Types.BOOLEAN},
		{"naoAlienacaoBensSemComunicacao", Types.BOOLEAN},
		{"reconheceGrupoOuSucessao", Types.BOOLEAN},
		{"compromissoConfidencialidade", Types.BOOLEAN},
		{"cienciaProcesso", Types.BOOLEAN}, {"abusoTransacao", Types.BOOLEAN},
		{"impugnacaoRecursos", Types.BOOLEAN},
		{"renunciaRecursos", Types.BOOLEAN},
		{"peticionamentoProcessos", Types.BOOLEAN},
		{"prestacaoInformacoes", Types.BOOLEAN},
		{"omissaoInformacoes", Types.BOOLEAN},
		{"manutencaoGarantias", Types.BOOLEAN}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("declaracaoId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("propostaId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("cumpreCompromissos", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("naoAlienacaoBensSemComunicacao", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("reconheceGrupoOuSucessao", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("compromissoConfidencialidade", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("cienciaProcesso", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("abusoTransacao", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("impugnacaoRecursos", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("renunciaRecursos", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("peticionamentoProcessos", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("prestacaoInformacoes", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("omissaoInformacoes", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("manutencaoGarantias", Types.BOOLEAN);
	}

	public static final String TABLE_SQL_CREATE =
		"create table GDF_Declaracao (uuid_ VARCHAR(75) null,declaracaoId LONG not null primary key,propostaId LONG,cumpreCompromissos BOOLEAN,naoAlienacaoBensSemComunicacao BOOLEAN,reconheceGrupoOuSucessao BOOLEAN,compromissoConfidencialidade BOOLEAN,cienciaProcesso BOOLEAN,abusoTransacao BOOLEAN,impugnacaoRecursos BOOLEAN,renunciaRecursos BOOLEAN,peticionamentoProcessos BOOLEAN,prestacaoInformacoes BOOLEAN,omissaoInformacoes BOOLEAN,manutencaoGarantias BOOLEAN)";

	public static final String TABLE_SQL_DROP = "drop table GDF_Declaracao";

	public static final String ORDER_BY_JPQL =
		" ORDER BY declaracao.declaracaoId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY GDF_Declaracao.declaracaoId ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long PROPOSTAID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long UUID_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long DECLARACAOID_COLUMN_BITMASK = 4L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public DeclaracaoModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _declaracaoId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setDeclaracaoId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _declaracaoId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Declaracao.class;
	}

	@Override
	public String getModelClassName() {
		return Declaracao.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<Declaracao, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		for (Map.Entry<String, Function<Declaracao, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<Declaracao, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName, attributeGetterFunction.apply((Declaracao)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<Declaracao, Object>> attributeSetterBiConsumers =
			getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<Declaracao, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(Declaracao)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<Declaracao, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<Declaracao, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map<String, Function<Declaracao, Object>>
			_attributeGetterFunctions;

		static {
			Map<String, Function<Declaracao, Object>> attributeGetterFunctions =
				new LinkedHashMap<String, Function<Declaracao, Object>>();

			attributeGetterFunctions.put("uuid", Declaracao::getUuid);
			attributeGetterFunctions.put(
				"declaracaoId", Declaracao::getDeclaracaoId);
			attributeGetterFunctions.put(
				"propostaId", Declaracao::getPropostaId);
			attributeGetterFunctions.put(
				"cumpreCompromissos", Declaracao::getCumpreCompromissos);
			attributeGetterFunctions.put(
				"naoAlienacaoBensSemComunicacao",
				Declaracao::getNaoAlienacaoBensSemComunicacao);
			attributeGetterFunctions.put(
				"reconheceGrupoOuSucessao",
				Declaracao::getReconheceGrupoOuSucessao);
			attributeGetterFunctions.put(
				"compromissoConfidencialidade",
				Declaracao::getCompromissoConfidencialidade);
			attributeGetterFunctions.put(
				"cienciaProcesso", Declaracao::getCienciaProcesso);
			attributeGetterFunctions.put(
				"abusoTransacao", Declaracao::getAbusoTransacao);
			attributeGetterFunctions.put(
				"impugnacaoRecursos", Declaracao::getImpugnacaoRecursos);
			attributeGetterFunctions.put(
				"renunciaRecursos", Declaracao::getRenunciaRecursos);
			attributeGetterFunctions.put(
				"peticionamentoProcessos",
				Declaracao::getPeticionamentoProcessos);
			attributeGetterFunctions.put(
				"prestacaoInformacoes", Declaracao::getPrestacaoInformacoes);
			attributeGetterFunctions.put(
				"omissaoInformacoes", Declaracao::getOmissaoInformacoes);
			attributeGetterFunctions.put(
				"manutencaoGarantias", Declaracao::getManutencaoGarantias);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map<String, BiConsumer<Declaracao, Object>>
			_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<Declaracao, ?>> attributeSetterBiConsumers =
				new LinkedHashMap<String, BiConsumer<Declaracao, ?>>();

			attributeSetterBiConsumers.put(
				"uuid", (BiConsumer<Declaracao, String>)Declaracao::setUuid);
			attributeSetterBiConsumers.put(
				"declaracaoId",
				(BiConsumer<Declaracao, Long>)Declaracao::setDeclaracaoId);
			attributeSetterBiConsumers.put(
				"propostaId",
				(BiConsumer<Declaracao, Long>)Declaracao::setPropostaId);
			attributeSetterBiConsumers.put(
				"cumpreCompromissos",
				(BiConsumer<Declaracao, Boolean>)
					Declaracao::setCumpreCompromissos);
			attributeSetterBiConsumers.put(
				"naoAlienacaoBensSemComunicacao",
				(BiConsumer<Declaracao, Boolean>)
					Declaracao::setNaoAlienacaoBensSemComunicacao);
			attributeSetterBiConsumers.put(
				"reconheceGrupoOuSucessao",
				(BiConsumer<Declaracao, Boolean>)
					Declaracao::setReconheceGrupoOuSucessao);
			attributeSetterBiConsumers.put(
				"compromissoConfidencialidade",
				(BiConsumer<Declaracao, Boolean>)
					Declaracao::setCompromissoConfidencialidade);
			attributeSetterBiConsumers.put(
				"cienciaProcesso",
				(BiConsumer<Declaracao, Boolean>)
					Declaracao::setCienciaProcesso);
			attributeSetterBiConsumers.put(
				"abusoTransacao",
				(BiConsumer<Declaracao, Boolean>)Declaracao::setAbusoTransacao);
			attributeSetterBiConsumers.put(
				"impugnacaoRecursos",
				(BiConsumer<Declaracao, Boolean>)
					Declaracao::setImpugnacaoRecursos);
			attributeSetterBiConsumers.put(
				"renunciaRecursos",
				(BiConsumer<Declaracao, Boolean>)
					Declaracao::setRenunciaRecursos);
			attributeSetterBiConsumers.put(
				"peticionamentoProcessos",
				(BiConsumer<Declaracao, Boolean>)
					Declaracao::setPeticionamentoProcessos);
			attributeSetterBiConsumers.put(
				"prestacaoInformacoes",
				(BiConsumer<Declaracao, Boolean>)
					Declaracao::setPrestacaoInformacoes);
			attributeSetterBiConsumers.put(
				"omissaoInformacoes",
				(BiConsumer<Declaracao, Boolean>)
					Declaracao::setOmissaoInformacoes);
			attributeSetterBiConsumers.put(
				"manutencaoGarantias",
				(BiConsumer<Declaracao, Boolean>)
					Declaracao::setManutencaoGarantias);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_uuid = uuid;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalUuid() {
		return getColumnOriginalValue("uuid_");
	}

	@JSON
	@Override
	public long getDeclaracaoId() {
		return _declaracaoId;
	}

	@Override
	public void setDeclaracaoId(long declaracaoId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_declaracaoId = declaracaoId;
	}

	@JSON
	@Override
	public long getPropostaId() {
		return _propostaId;
	}

	@Override
	public void setPropostaId(long propostaId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_propostaId = propostaId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalPropostaId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("propostaId"));
	}

	@JSON
	@Override
	public boolean getCumpreCompromissos() {
		return _cumpreCompromissos;
	}

	@JSON
	@Override
	public boolean isCumpreCompromissos() {
		return _cumpreCompromissos;
	}

	@Override
	public void setCumpreCompromissos(boolean cumpreCompromissos) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_cumpreCompromissos = cumpreCompromissos;
	}

	@JSON
	@Override
	public boolean getNaoAlienacaoBensSemComunicacao() {
		return _naoAlienacaoBensSemComunicacao;
	}

	@JSON
	@Override
	public boolean isNaoAlienacaoBensSemComunicacao() {
		return _naoAlienacaoBensSemComunicacao;
	}

	@Override
	public void setNaoAlienacaoBensSemComunicacao(
		boolean naoAlienacaoBensSemComunicacao) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_naoAlienacaoBensSemComunicacao = naoAlienacaoBensSemComunicacao;
	}

	@JSON
	@Override
	public boolean getReconheceGrupoOuSucessao() {
		return _reconheceGrupoOuSucessao;
	}

	@JSON
	@Override
	public boolean isReconheceGrupoOuSucessao() {
		return _reconheceGrupoOuSucessao;
	}

	@Override
	public void setReconheceGrupoOuSucessao(boolean reconheceGrupoOuSucessao) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_reconheceGrupoOuSucessao = reconheceGrupoOuSucessao;
	}

	@JSON
	@Override
	public boolean getCompromissoConfidencialidade() {
		return _compromissoConfidencialidade;
	}

	@JSON
	@Override
	public boolean isCompromissoConfidencialidade() {
		return _compromissoConfidencialidade;
	}

	@Override
	public void setCompromissoConfidencialidade(
		boolean compromissoConfidencialidade) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_compromissoConfidencialidade = compromissoConfidencialidade;
	}

	@JSON
	@Override
	public boolean getCienciaProcesso() {
		return _cienciaProcesso;
	}

	@JSON
	@Override
	public boolean isCienciaProcesso() {
		return _cienciaProcesso;
	}

	@Override
	public void setCienciaProcesso(boolean cienciaProcesso) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_cienciaProcesso = cienciaProcesso;
	}

	@JSON
	@Override
	public boolean getAbusoTransacao() {
		return _abusoTransacao;
	}

	@JSON
	@Override
	public boolean isAbusoTransacao() {
		return _abusoTransacao;
	}

	@Override
	public void setAbusoTransacao(boolean abusoTransacao) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_abusoTransacao = abusoTransacao;
	}

	@JSON
	@Override
	public boolean getImpugnacaoRecursos() {
		return _impugnacaoRecursos;
	}

	@JSON
	@Override
	public boolean isImpugnacaoRecursos() {
		return _impugnacaoRecursos;
	}

	@Override
	public void setImpugnacaoRecursos(boolean impugnacaoRecursos) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_impugnacaoRecursos = impugnacaoRecursos;
	}

	@JSON
	@Override
	public boolean getRenunciaRecursos() {
		return _renunciaRecursos;
	}

	@JSON
	@Override
	public boolean isRenunciaRecursos() {
		return _renunciaRecursos;
	}

	@Override
	public void setRenunciaRecursos(boolean renunciaRecursos) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_renunciaRecursos = renunciaRecursos;
	}

	@JSON
	@Override
	public boolean getPeticionamentoProcessos() {
		return _peticionamentoProcessos;
	}

	@JSON
	@Override
	public boolean isPeticionamentoProcessos() {
		return _peticionamentoProcessos;
	}

	@Override
	public void setPeticionamentoProcessos(boolean peticionamentoProcessos) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_peticionamentoProcessos = peticionamentoProcessos;
	}

	@JSON
	@Override
	public boolean getPrestacaoInformacoes() {
		return _prestacaoInformacoes;
	}

	@JSON
	@Override
	public boolean isPrestacaoInformacoes() {
		return _prestacaoInformacoes;
	}

	@Override
	public void setPrestacaoInformacoes(boolean prestacaoInformacoes) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_prestacaoInformacoes = prestacaoInformacoes;
	}

	@JSON
	@Override
	public boolean getOmissaoInformacoes() {
		return _omissaoInformacoes;
	}

	@JSON
	@Override
	public boolean isOmissaoInformacoes() {
		return _omissaoInformacoes;
	}

	@Override
	public void setOmissaoInformacoes(boolean omissaoInformacoes) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_omissaoInformacoes = omissaoInformacoes;
	}

	@JSON
	@Override
	public boolean getManutencaoGarantias() {
		return _manutencaoGarantias;
	}

	@JSON
	@Override
	public boolean isManutencaoGarantias() {
		return _manutencaoGarantias;
	}

	@Override
	public void setManutencaoGarantias(boolean manutencaoGarantias) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_manutencaoGarantias = manutencaoGarantias;
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			0, Declaracao.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Declaracao toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, Declaracao>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		DeclaracaoImpl declaracaoImpl = new DeclaracaoImpl();

		declaracaoImpl.setUuid(getUuid());
		declaracaoImpl.setDeclaracaoId(getDeclaracaoId());
		declaracaoImpl.setPropostaId(getPropostaId());
		declaracaoImpl.setCumpreCompromissos(isCumpreCompromissos());
		declaracaoImpl.setNaoAlienacaoBensSemComunicacao(
			isNaoAlienacaoBensSemComunicacao());
		declaracaoImpl.setReconheceGrupoOuSucessao(
			isReconheceGrupoOuSucessao());
		declaracaoImpl.setCompromissoConfidencialidade(
			isCompromissoConfidencialidade());
		declaracaoImpl.setCienciaProcesso(isCienciaProcesso());
		declaracaoImpl.setAbusoTransacao(isAbusoTransacao());
		declaracaoImpl.setImpugnacaoRecursos(isImpugnacaoRecursos());
		declaracaoImpl.setRenunciaRecursos(isRenunciaRecursos());
		declaracaoImpl.setPeticionamentoProcessos(isPeticionamentoProcessos());
		declaracaoImpl.setPrestacaoInformacoes(isPrestacaoInformacoes());
		declaracaoImpl.setOmissaoInformacoes(isOmissaoInformacoes());
		declaracaoImpl.setManutencaoGarantias(isManutencaoGarantias());

		declaracaoImpl.resetOriginalValues();

		return declaracaoImpl;
	}

	@Override
	public Declaracao cloneWithOriginalValues() {
		DeclaracaoImpl declaracaoImpl = new DeclaracaoImpl();

		declaracaoImpl.setUuid(this.<String>getColumnOriginalValue("uuid_"));
		declaracaoImpl.setDeclaracaoId(
			this.<Long>getColumnOriginalValue("declaracaoId"));
		declaracaoImpl.setPropostaId(
			this.<Long>getColumnOriginalValue("propostaId"));
		declaracaoImpl.setCumpreCompromissos(
			this.<Boolean>getColumnOriginalValue("cumpreCompromissos"));
		declaracaoImpl.setNaoAlienacaoBensSemComunicacao(
			this.<Boolean>getColumnOriginalValue(
				"naoAlienacaoBensSemComunicacao"));
		declaracaoImpl.setReconheceGrupoOuSucessao(
			this.<Boolean>getColumnOriginalValue("reconheceGrupoOuSucessao"));
		declaracaoImpl.setCompromissoConfidencialidade(
			this.<Boolean>getColumnOriginalValue(
				"compromissoConfidencialidade"));
		declaracaoImpl.setCienciaProcesso(
			this.<Boolean>getColumnOriginalValue("cienciaProcesso"));
		declaracaoImpl.setAbusoTransacao(
			this.<Boolean>getColumnOriginalValue("abusoTransacao"));
		declaracaoImpl.setImpugnacaoRecursos(
			this.<Boolean>getColumnOriginalValue("impugnacaoRecursos"));
		declaracaoImpl.setRenunciaRecursos(
			this.<Boolean>getColumnOriginalValue("renunciaRecursos"));
		declaracaoImpl.setPeticionamentoProcessos(
			this.<Boolean>getColumnOriginalValue("peticionamentoProcessos"));
		declaracaoImpl.setPrestacaoInformacoes(
			this.<Boolean>getColumnOriginalValue("prestacaoInformacoes"));
		declaracaoImpl.setOmissaoInformacoes(
			this.<Boolean>getColumnOriginalValue("omissaoInformacoes"));
		declaracaoImpl.setManutencaoGarantias(
			this.<Boolean>getColumnOriginalValue("manutencaoGarantias"));

		return declaracaoImpl;
	}

	@Override
	public int compareTo(Declaracao declaracao) {
		long primaryKey = declaracao.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof Declaracao)) {
			return false;
		}

		Declaracao declaracao = (Declaracao)object;

		long primaryKey = declaracao.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<Declaracao> toCacheModel() {
		DeclaracaoCacheModel declaracaoCacheModel = new DeclaracaoCacheModel();

		declaracaoCacheModel.uuid = getUuid();

		String uuid = declaracaoCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			declaracaoCacheModel.uuid = null;
		}

		declaracaoCacheModel.declaracaoId = getDeclaracaoId();

		declaracaoCacheModel.propostaId = getPropostaId();

		declaracaoCacheModel.cumpreCompromissos = isCumpreCompromissos();

		declaracaoCacheModel.naoAlienacaoBensSemComunicacao =
			isNaoAlienacaoBensSemComunicacao();

		declaracaoCacheModel.reconheceGrupoOuSucessao =
			isReconheceGrupoOuSucessao();

		declaracaoCacheModel.compromissoConfidencialidade =
			isCompromissoConfidencialidade();

		declaracaoCacheModel.cienciaProcesso = isCienciaProcesso();

		declaracaoCacheModel.abusoTransacao = isAbusoTransacao();

		declaracaoCacheModel.impugnacaoRecursos = isImpugnacaoRecursos();

		declaracaoCacheModel.renunciaRecursos = isRenunciaRecursos();

		declaracaoCacheModel.peticionamentoProcessos =
			isPeticionamentoProcessos();

		declaracaoCacheModel.prestacaoInformacoes = isPrestacaoInformacoes();

		declaracaoCacheModel.omissaoInformacoes = isOmissaoInformacoes();

		declaracaoCacheModel.manutencaoGarantias = isManutencaoGarantias();

		return declaracaoCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<Declaracao, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<Declaracao, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<Declaracao, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply((Declaracao)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, Declaracao>
			_escapedModelProxyProviderFunction =
				ProxyUtil.getProxyProviderFunction(
					Declaracao.class, ModelWrapper.class);

	}

	private String _uuid;
	private long _declaracaoId;
	private long _propostaId;
	private boolean _cumpreCompromissos;
	private boolean _naoAlienacaoBensSemComunicacao;
	private boolean _reconheceGrupoOuSucessao;
	private boolean _compromissoConfidencialidade;
	private boolean _cienciaProcesso;
	private boolean _abusoTransacao;
	private boolean _impugnacaoRecursos;
	private boolean _renunciaRecursos;
	private boolean _peticionamentoProcessos;
	private boolean _prestacaoInformacoes;
	private boolean _omissaoInformacoes;
	private boolean _manutencaoGarantias;

	public <T> T getColumnValue(String columnName) {
		columnName = _attributeNames.getOrDefault(columnName, columnName);

		Function<Declaracao, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((Declaracao)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("uuid_", _uuid);
		_columnOriginalValues.put("declaracaoId", _declaracaoId);
		_columnOriginalValues.put("propostaId", _propostaId);
		_columnOriginalValues.put("cumpreCompromissos", _cumpreCompromissos);
		_columnOriginalValues.put(
			"naoAlienacaoBensSemComunicacao", _naoAlienacaoBensSemComunicacao);
		_columnOriginalValues.put(
			"reconheceGrupoOuSucessao", _reconheceGrupoOuSucessao);
		_columnOriginalValues.put(
			"compromissoConfidencialidade", _compromissoConfidencialidade);
		_columnOriginalValues.put("cienciaProcesso", _cienciaProcesso);
		_columnOriginalValues.put("abusoTransacao", _abusoTransacao);
		_columnOriginalValues.put("impugnacaoRecursos", _impugnacaoRecursos);
		_columnOriginalValues.put("renunciaRecursos", _renunciaRecursos);
		_columnOriginalValues.put(
			"peticionamentoProcessos", _peticionamentoProcessos);
		_columnOriginalValues.put(
			"prestacaoInformacoes", _prestacaoInformacoes);
		_columnOriginalValues.put("omissaoInformacoes", _omissaoInformacoes);
		_columnOriginalValues.put("manutencaoGarantias", _manutencaoGarantias);
	}

	private static final Map<String, String> _attributeNames;

	static {
		Map<String, String> attributeNames = new HashMap<>();

		attributeNames.put("uuid_", "uuid");

		_attributeNames = Collections.unmodifiableMap(attributeNames);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("uuid_", 1L);

		columnBitmasks.put("declaracaoId", 2L);

		columnBitmasks.put("propostaId", 4L);

		columnBitmasks.put("cumpreCompromissos", 8L);

		columnBitmasks.put("naoAlienacaoBensSemComunicacao", 16L);

		columnBitmasks.put("reconheceGrupoOuSucessao", 32L);

		columnBitmasks.put("compromissoConfidencialidade", 64L);

		columnBitmasks.put("cienciaProcesso", 128L);

		columnBitmasks.put("abusoTransacao", 256L);

		columnBitmasks.put("impugnacaoRecursos", 512L);

		columnBitmasks.put("renunciaRecursos", 1024L);

		columnBitmasks.put("peticionamentoProcessos", 2048L);

		columnBitmasks.put("prestacaoInformacoes", 4096L);

		columnBitmasks.put("omissaoInformacoes", 8192L);

		columnBitmasks.put("manutencaoGarantias", 16384L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private Declaracao _escapedModel;

}