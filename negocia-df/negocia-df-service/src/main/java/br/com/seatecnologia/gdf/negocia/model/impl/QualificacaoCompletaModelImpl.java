/**
 * SPDX-FileCopyrightText: (c) 2025 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package br.com.seatecnologia.gdf.negocia.model.impl;

import br.com.seatecnologia.gdf.negocia.model.QualificacaoCompleta;
import br.com.seatecnologia.gdf.negocia.model.QualificacaoCompletaModel;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the QualificacaoCompleta service. Represents a row in the &quot;GDF_QualificacaoCompleta&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>QualificacaoCompletaModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link QualificacaoCompletaImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see QualificacaoCompletaImpl
 * @generated
 */
@JSON(strict = true)
public class QualificacaoCompletaModelImpl
	extends BaseModelImpl<QualificacaoCompleta>
	implements QualificacaoCompletaModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a qualificacao completa model instance should use the <code>QualificacaoCompleta</code> interface instead.
	 */
	public static final String TABLE_NAME = "GDF_QualificacaoCompleta";

	public static final Object[][] TABLE_COLUMNS = {
		{"uuid_", Types.VARCHAR}, {"qualificacaoId", Types.BIGINT},
		{"tipoPessoa", Types.VARCHAR}, {"nomeRazaoSocial", Types.VARCHAR},
		{"nomeFantasia", Types.VARCHAR}, {"representanteLegal", Types.VARCHAR},
		{"cpfCnpj", Types.VARCHAR}, {"domicilioFiscal", Types.VARCHAR},
		{"numeroCfdf", Types.VARCHAR}, {"email", Types.VARCHAR},
		{"telefone", Types.VARCHAR}, {"whatsapp", Types.VARCHAR},
		{"enderecoPostalId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("qualificacaoId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("tipoPessoa", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("nomeRazaoSocial", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("nomeFantasia", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("representanteLegal", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("cpfCnpj", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("domicilioFiscal", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("numeroCfdf", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("email", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("telefone", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("whatsapp", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("enderecoPostalId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table GDF_QualificacaoCompleta (uuid_ VARCHAR(75) null,qualificacaoId LONG not null primary key,tipoPessoa VARCHAR(255) null,nomeRazaoSocial VARCHAR(1000) null,nomeFantasia VARCHAR(1000) null,representanteLegal VARCHAR(1000) null,cpfCnpj VARCHAR(255) null,domicilioFiscal VARCHAR(255) null,numeroCfdf VARCHAR(255) null,email VARCHAR(1000) null,telefone VARCHAR(255) null,whatsapp VARCHAR(255) null,enderecoPostalId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table GDF_QualificacaoCompleta";

	public static final String ORDER_BY_JPQL =
		" ORDER BY qualificacaoCompleta.qualificacaoId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY GDF_QualificacaoCompleta.qualificacaoId ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long UUID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long QUALIFICACAOID_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public QualificacaoCompletaModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _qualificacaoId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setQualificacaoId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _qualificacaoId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return QualificacaoCompleta.class;
	}

	@Override
	public String getModelClassName() {
		return QualificacaoCompleta.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<QualificacaoCompleta, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<QualificacaoCompleta, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<QualificacaoCompleta, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((QualificacaoCompleta)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<QualificacaoCompleta, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<QualificacaoCompleta, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(QualificacaoCompleta)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<QualificacaoCompleta, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<QualificacaoCompleta, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map<String, Function<QualificacaoCompleta, Object>>
			_attributeGetterFunctions;

		static {
			Map<String, Function<QualificacaoCompleta, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String, Function<QualificacaoCompleta, Object>>();

			attributeGetterFunctions.put("uuid", QualificacaoCompleta::getUuid);
			attributeGetterFunctions.put(
				"qualificacaoId", QualificacaoCompleta::getQualificacaoId);
			attributeGetterFunctions.put(
				"tipoPessoa", QualificacaoCompleta::getTipoPessoa);
			attributeGetterFunctions.put(
				"nomeRazaoSocial", QualificacaoCompleta::getNomeRazaoSocial);
			attributeGetterFunctions.put(
				"nomeFantasia", QualificacaoCompleta::getNomeFantasia);
			attributeGetterFunctions.put(
				"representanteLegal",
				QualificacaoCompleta::getRepresentanteLegal);
			attributeGetterFunctions.put(
				"cpfCnpj", QualificacaoCompleta::getCpfCnpj);
			attributeGetterFunctions.put(
				"domicilioFiscal", QualificacaoCompleta::getDomicilioFiscal);
			attributeGetterFunctions.put(
				"numeroCfdf", QualificacaoCompleta::getNumeroCfdf);
			attributeGetterFunctions.put(
				"email", QualificacaoCompleta::getEmail);
			attributeGetterFunctions.put(
				"telefone", QualificacaoCompleta::getTelefone);
			attributeGetterFunctions.put(
				"whatsapp", QualificacaoCompleta::getWhatsapp);
			attributeGetterFunctions.put(
				"enderecoPostalId", QualificacaoCompleta::getEnderecoPostalId);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map
			<String, BiConsumer<QualificacaoCompleta, Object>>
				_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<QualificacaoCompleta, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap
						<String, BiConsumer<QualificacaoCompleta, ?>>();

			attributeSetterBiConsumers.put(
				"uuid",
				(BiConsumer<QualificacaoCompleta, String>)
					QualificacaoCompleta::setUuid);
			attributeSetterBiConsumers.put(
				"qualificacaoId",
				(BiConsumer<QualificacaoCompleta, Long>)
					QualificacaoCompleta::setQualificacaoId);
			attributeSetterBiConsumers.put(
				"tipoPessoa",
				(BiConsumer<QualificacaoCompleta, String>)
					QualificacaoCompleta::setTipoPessoa);
			attributeSetterBiConsumers.put(
				"nomeRazaoSocial",
				(BiConsumer<QualificacaoCompleta, String>)
					QualificacaoCompleta::setNomeRazaoSocial);
			attributeSetterBiConsumers.put(
				"nomeFantasia",
				(BiConsumer<QualificacaoCompleta, String>)
					QualificacaoCompleta::setNomeFantasia);
			attributeSetterBiConsumers.put(
				"representanteLegal",
				(BiConsumer<QualificacaoCompleta, String>)
					QualificacaoCompleta::setRepresentanteLegal);
			attributeSetterBiConsumers.put(
				"cpfCnpj",
				(BiConsumer<QualificacaoCompleta, String>)
					QualificacaoCompleta::setCpfCnpj);
			attributeSetterBiConsumers.put(
				"domicilioFiscal",
				(BiConsumer<QualificacaoCompleta, String>)
					QualificacaoCompleta::setDomicilioFiscal);
			attributeSetterBiConsumers.put(
				"numeroCfdf",
				(BiConsumer<QualificacaoCompleta, String>)
					QualificacaoCompleta::setNumeroCfdf);
			attributeSetterBiConsumers.put(
				"email",
				(BiConsumer<QualificacaoCompleta, String>)
					QualificacaoCompleta::setEmail);
			attributeSetterBiConsumers.put(
				"telefone",
				(BiConsumer<QualificacaoCompleta, String>)
					QualificacaoCompleta::setTelefone);
			attributeSetterBiConsumers.put(
				"whatsapp",
				(BiConsumer<QualificacaoCompleta, String>)
					QualificacaoCompleta::setWhatsapp);
			attributeSetterBiConsumers.put(
				"enderecoPostalId",
				(BiConsumer<QualificacaoCompleta, Long>)
					QualificacaoCompleta::setEnderecoPostalId);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_uuid = uuid;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalUuid() {
		return getColumnOriginalValue("uuid_");
	}

	@JSON
	@Override
	public long getQualificacaoId() {
		return _qualificacaoId;
	}

	@Override
	public void setQualificacaoId(long qualificacaoId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_qualificacaoId = qualificacaoId;
	}

	@JSON
	@Override
	public String getTipoPessoa() {
		if (_tipoPessoa == null) {
			return "";
		}
		else {
			return _tipoPessoa;
		}
	}

	@Override
	public void setTipoPessoa(String tipoPessoa) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tipoPessoa = tipoPessoa;
	}

	@JSON
	@Override
	public String getNomeRazaoSocial() {
		if (_nomeRazaoSocial == null) {
			return "";
		}
		else {
			return _nomeRazaoSocial;
		}
	}

	@Override
	public void setNomeRazaoSocial(String nomeRazaoSocial) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_nomeRazaoSocial = nomeRazaoSocial;
	}

	@JSON
	@Override
	public String getNomeFantasia() {
		if (_nomeFantasia == null) {
			return "";
		}
		else {
			return _nomeFantasia;
		}
	}

	@Override
	public void setNomeFantasia(String nomeFantasia) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_nomeFantasia = nomeFantasia;
	}

	@JSON
	@Override
	public String getRepresentanteLegal() {
		if (_representanteLegal == null) {
			return "";
		}
		else {
			return _representanteLegal;
		}
	}

	@Override
	public void setRepresentanteLegal(String representanteLegal) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_representanteLegal = representanteLegal;
	}

	@JSON
	@Override
	public String getCpfCnpj() {
		if (_cpfCnpj == null) {
			return "";
		}
		else {
			return _cpfCnpj;
		}
	}

	@Override
	public void setCpfCnpj(String cpfCnpj) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_cpfCnpj = cpfCnpj;
	}

	@JSON
	@Override
	public String getDomicilioFiscal() {
		if (_domicilioFiscal == null) {
			return "";
		}
		else {
			return _domicilioFiscal;
		}
	}

	@Override
	public void setDomicilioFiscal(String domicilioFiscal) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_domicilioFiscal = domicilioFiscal;
	}

	@JSON
	@Override
	public String getNumeroCfdf() {
		if (_numeroCfdf == null) {
			return "";
		}
		else {
			return _numeroCfdf;
		}
	}

	@Override
	public void setNumeroCfdf(String numeroCfdf) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_numeroCfdf = numeroCfdf;
	}

	@JSON
	@Override
	public String getEmail() {
		if (_email == null) {
			return "";
		}
		else {
			return _email;
		}
	}

	@Override
	public void setEmail(String email) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_email = email;
	}

	@JSON
	@Override
	public String getTelefone() {
		if (_telefone == null) {
			return "";
		}
		else {
			return _telefone;
		}
	}

	@Override
	public void setTelefone(String telefone) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_telefone = telefone;
	}

	@JSON
	@Override
	public String getWhatsapp() {
		if (_whatsapp == null) {
			return "";
		}
		else {
			return _whatsapp;
		}
	}

	@Override
	public void setWhatsapp(String whatsapp) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_whatsapp = whatsapp;
	}

	@JSON
	@Override
	public long getEnderecoPostalId() {
		return _enderecoPostalId;
	}

	@Override
	public void setEnderecoPostalId(long enderecoPostalId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_enderecoPostalId = enderecoPostalId;
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			0, QualificacaoCompleta.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public QualificacaoCompleta toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, QualificacaoCompleta>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		QualificacaoCompletaImpl qualificacaoCompletaImpl =
			new QualificacaoCompletaImpl();

		qualificacaoCompletaImpl.setUuid(getUuid());
		qualificacaoCompletaImpl.setQualificacaoId(getQualificacaoId());
		qualificacaoCompletaImpl.setTipoPessoa(getTipoPessoa());
		qualificacaoCompletaImpl.setNomeRazaoSocial(getNomeRazaoSocial());
		qualificacaoCompletaImpl.setNomeFantasia(getNomeFantasia());
		qualificacaoCompletaImpl.setRepresentanteLegal(getRepresentanteLegal());
		qualificacaoCompletaImpl.setCpfCnpj(getCpfCnpj());
		qualificacaoCompletaImpl.setDomicilioFiscal(getDomicilioFiscal());
		qualificacaoCompletaImpl.setNumeroCfdf(getNumeroCfdf());
		qualificacaoCompletaImpl.setEmail(getEmail());
		qualificacaoCompletaImpl.setTelefone(getTelefone());
		qualificacaoCompletaImpl.setWhatsapp(getWhatsapp());
		qualificacaoCompletaImpl.setEnderecoPostalId(getEnderecoPostalId());

		qualificacaoCompletaImpl.resetOriginalValues();

		return qualificacaoCompletaImpl;
	}

	@Override
	public QualificacaoCompleta cloneWithOriginalValues() {
		QualificacaoCompletaImpl qualificacaoCompletaImpl =
			new QualificacaoCompletaImpl();

		qualificacaoCompletaImpl.setUuid(
			this.<String>getColumnOriginalValue("uuid_"));
		qualificacaoCompletaImpl.setQualificacaoId(
			this.<Long>getColumnOriginalValue("qualificacaoId"));
		qualificacaoCompletaImpl.setTipoPessoa(
			this.<String>getColumnOriginalValue("tipoPessoa"));
		qualificacaoCompletaImpl.setNomeRazaoSocial(
			this.<String>getColumnOriginalValue("nomeRazaoSocial"));
		qualificacaoCompletaImpl.setNomeFantasia(
			this.<String>getColumnOriginalValue("nomeFantasia"));
		qualificacaoCompletaImpl.setRepresentanteLegal(
			this.<String>getColumnOriginalValue("representanteLegal"));
		qualificacaoCompletaImpl.setCpfCnpj(
			this.<String>getColumnOriginalValue("cpfCnpj"));
		qualificacaoCompletaImpl.setDomicilioFiscal(
			this.<String>getColumnOriginalValue("domicilioFiscal"));
		qualificacaoCompletaImpl.setNumeroCfdf(
			this.<String>getColumnOriginalValue("numeroCfdf"));
		qualificacaoCompletaImpl.setEmail(
			this.<String>getColumnOriginalValue("email"));
		qualificacaoCompletaImpl.setTelefone(
			this.<String>getColumnOriginalValue("telefone"));
		qualificacaoCompletaImpl.setWhatsapp(
			this.<String>getColumnOriginalValue("whatsapp"));
		qualificacaoCompletaImpl.setEnderecoPostalId(
			this.<Long>getColumnOriginalValue("enderecoPostalId"));

		return qualificacaoCompletaImpl;
	}

	@Override
	public int compareTo(QualificacaoCompleta qualificacaoCompleta) {
		long primaryKey = qualificacaoCompleta.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof QualificacaoCompleta)) {
			return false;
		}

		QualificacaoCompleta qualificacaoCompleta =
			(QualificacaoCompleta)object;

		long primaryKey = qualificacaoCompleta.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<QualificacaoCompleta> toCacheModel() {
		QualificacaoCompletaCacheModel qualificacaoCompletaCacheModel =
			new QualificacaoCompletaCacheModel();

		qualificacaoCompletaCacheModel.uuid = getUuid();

		String uuid = qualificacaoCompletaCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			qualificacaoCompletaCacheModel.uuid = null;
		}

		qualificacaoCompletaCacheModel.qualificacaoId = getQualificacaoId();

		qualificacaoCompletaCacheModel.tipoPessoa = getTipoPessoa();

		String tipoPessoa = qualificacaoCompletaCacheModel.tipoPessoa;

		if ((tipoPessoa != null) && (tipoPessoa.length() == 0)) {
			qualificacaoCompletaCacheModel.tipoPessoa = null;
		}

		qualificacaoCompletaCacheModel.nomeRazaoSocial = getNomeRazaoSocial();

		String nomeRazaoSocial = qualificacaoCompletaCacheModel.nomeRazaoSocial;

		if ((nomeRazaoSocial != null) && (nomeRazaoSocial.length() == 0)) {
			qualificacaoCompletaCacheModel.nomeRazaoSocial = null;
		}

		qualificacaoCompletaCacheModel.nomeFantasia = getNomeFantasia();

		String nomeFantasia = qualificacaoCompletaCacheModel.nomeFantasia;

		if ((nomeFantasia != null) && (nomeFantasia.length() == 0)) {
			qualificacaoCompletaCacheModel.nomeFantasia = null;
		}

		qualificacaoCompletaCacheModel.representanteLegal =
			getRepresentanteLegal();

		String representanteLegal =
			qualificacaoCompletaCacheModel.representanteLegal;

		if ((representanteLegal != null) &&
			(representanteLegal.length() == 0)) {

			qualificacaoCompletaCacheModel.representanteLegal = null;
		}

		qualificacaoCompletaCacheModel.cpfCnpj = getCpfCnpj();

		String cpfCnpj = qualificacaoCompletaCacheModel.cpfCnpj;

		if ((cpfCnpj != null) && (cpfCnpj.length() == 0)) {
			qualificacaoCompletaCacheModel.cpfCnpj = null;
		}

		qualificacaoCompletaCacheModel.domicilioFiscal = getDomicilioFiscal();

		String domicilioFiscal = qualificacaoCompletaCacheModel.domicilioFiscal;

		if ((domicilioFiscal != null) && (domicilioFiscal.length() == 0)) {
			qualificacaoCompletaCacheModel.domicilioFiscal = null;
		}

		qualificacaoCompletaCacheModel.numeroCfdf = getNumeroCfdf();

		String numeroCfdf = qualificacaoCompletaCacheModel.numeroCfdf;

		if ((numeroCfdf != null) && (numeroCfdf.length() == 0)) {
			qualificacaoCompletaCacheModel.numeroCfdf = null;
		}

		qualificacaoCompletaCacheModel.email = getEmail();

		String email = qualificacaoCompletaCacheModel.email;

		if ((email != null) && (email.length() == 0)) {
			qualificacaoCompletaCacheModel.email = null;
		}

		qualificacaoCompletaCacheModel.telefone = getTelefone();

		String telefone = qualificacaoCompletaCacheModel.telefone;

		if ((telefone != null) && (telefone.length() == 0)) {
			qualificacaoCompletaCacheModel.telefone = null;
		}

		qualificacaoCompletaCacheModel.whatsapp = getWhatsapp();

		String whatsapp = qualificacaoCompletaCacheModel.whatsapp;

		if ((whatsapp != null) && (whatsapp.length() == 0)) {
			qualificacaoCompletaCacheModel.whatsapp = null;
		}

		qualificacaoCompletaCacheModel.enderecoPostalId = getEnderecoPostalId();

		return qualificacaoCompletaCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<QualificacaoCompleta, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<QualificacaoCompleta, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<QualificacaoCompleta, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(QualificacaoCompleta)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, QualificacaoCompleta>
			_escapedModelProxyProviderFunction =
				ProxyUtil.getProxyProviderFunction(
					QualificacaoCompleta.class, ModelWrapper.class);

	}

	private String _uuid;
	private long _qualificacaoId;
	private String _tipoPessoa;
	private String _nomeRazaoSocial;
	private String _nomeFantasia;
	private String _representanteLegal;
	private String _cpfCnpj;
	private String _domicilioFiscal;
	private String _numeroCfdf;
	private String _email;
	private String _telefone;
	private String _whatsapp;
	private long _enderecoPostalId;

	public <T> T getColumnValue(String columnName) {
		columnName = _attributeNames.getOrDefault(columnName, columnName);

		Function<QualificacaoCompleta, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((QualificacaoCompleta)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("uuid_", _uuid);
		_columnOriginalValues.put("qualificacaoId", _qualificacaoId);
		_columnOriginalValues.put("tipoPessoa", _tipoPessoa);
		_columnOriginalValues.put("nomeRazaoSocial", _nomeRazaoSocial);
		_columnOriginalValues.put("nomeFantasia", _nomeFantasia);
		_columnOriginalValues.put("representanteLegal", _representanteLegal);
		_columnOriginalValues.put("cpfCnpj", _cpfCnpj);
		_columnOriginalValues.put("domicilioFiscal", _domicilioFiscal);
		_columnOriginalValues.put("numeroCfdf", _numeroCfdf);
		_columnOriginalValues.put("email", _email);
		_columnOriginalValues.put("telefone", _telefone);
		_columnOriginalValues.put("whatsapp", _whatsapp);
		_columnOriginalValues.put("enderecoPostalId", _enderecoPostalId);
	}

	private static final Map<String, String> _attributeNames;

	static {
		Map<String, String> attributeNames = new HashMap<>();

		attributeNames.put("uuid_", "uuid");

		_attributeNames = Collections.unmodifiableMap(attributeNames);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("uuid_", 1L);

		columnBitmasks.put("qualificacaoId", 2L);

		columnBitmasks.put("tipoPessoa", 4L);

		columnBitmasks.put("nomeRazaoSocial", 8L);

		columnBitmasks.put("nomeFantasia", 16L);

		columnBitmasks.put("representanteLegal", 32L);

		columnBitmasks.put("cpfCnpj", 64L);

		columnBitmasks.put("domicilioFiscal", 128L);

		columnBitmasks.put("numeroCfdf", 256L);

		columnBitmasks.put("email", 512L);

		columnBitmasks.put("telefone", 1024L);

		columnBitmasks.put("whatsapp", 2048L);

		columnBitmasks.put("enderecoPostalId", 4096L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private QualificacaoCompleta _escapedModel;

}