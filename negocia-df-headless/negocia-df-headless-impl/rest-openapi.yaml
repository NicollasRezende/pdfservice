info:
    description: "NegociaDfHeadless REST API"
    license:
        name: "Apache 2.0"
        url: "http://www.apache.org/licenses/LICENSE-2.0.html"
    title: "NegociaDfHeadless"
    version: v1.0
openapi: 3.0.1

components:
    schemas:
        PropostaEntityList:
            properties:
                propostaId:
                    format: int64
                    type: integer
                cpfCnpj:
                    type: string
                tipoProposta:
                    type: string
                protocolo:
                    type: string
                numeroProtocoloSEI:
                    type: string
                editalUrl:
                    type: string
                status:
                    type: string
                createDate:
                    type: string
                    format: date-time
                modifiedDate:
                    type: string
                    format: date-time
                documentosPropostaUrl:
                    type: string
        PropostaZipEntity:
            properties:
                urlZip:
                    type: string
                propostaId:
                    format: int64
                    type: integer
                statusProposta:
                    type: string
        PropostaEntity:
            properties:
                propostaId:
                    format: int64
                    type: integer
                createDate:
                    type: string
                    format: date
                modifiedDate:
                    type: string
                    format: date
                createUser:
                    type: string
                zipUrl:
                    type: string
                fundamentacaoPedido:
                    type: object
                    properties:
                        fundamentacao:
                            type: string
                        documentacaoComprobatoria:
                            type: array
                            items:
                                $ref: '#/components/schemas/ArquivosEntity'
                        identificacaoDebitos:
                            type: array
                            items:
                                $ref: '#/components/schemas/IdentificacaoDebitosEntity'
                declaracao:
                    type: object
                    properties:
                        cumpreCompromissos:
                            type: boolean
                        naoAlienacaoBensSemComunicacao:
                            type: boolean
                        reconheceGrupoOuSucessao:
                            type: boolean
                        compromissoConfidencialidade:
                            type: boolean
                        cienciaProcesso:
                            type: boolean
                        abusoTransacao:
                            type: boolean
                        impugnacaoRecursos:
                            type: boolean
                        renunciaRecursos:
                            type: boolean
                        peticionamentoProcessos:
                            type: boolean
                        prestacaoInformacoes:
                            type: boolean
                        omissaoInformacoes:
                            type: boolean
                        manutencaoGarantias:
                            type: boolean
                        proibicaoInterposicao:
                            type: boolean
                protocolo:
                    type: string
                numeroProtocoloSEI:
                    type: string
                editalId:
                    format: int64
                    type: integer
                tipoProposta:
                    type: string
                    #enum: ["Individual", "Edital"]
                propostaPaiId:
                    format: int64
                    type: integer
                status:
                    type: string
                dadosContribuinte:
                    $ref: '#/components/schemas/DadosContribuinteEntity'
                administradorJudicial:
                    $ref: '#/components/schemas/AdministradorJudicialEntity'
                advogado:
                    $ref: '#/components/schemas/AdvogadoEntity'
                procuracao:
                    $ref: '#/components/schemas/ArquivosEntity'
                garantiaEntity:
                    type: object
                    properties:
                        tipoDevedor:
                            type: string
                        garantiaDetalhadaEntities:
                            type: array
                            items:
                                $ref: '#/components/schemas/GarantiaDetalhadaEntity'
                acoesJudiciaisEntities:
                    type: array
                    items:
                        $ref: '#/components/schemas/AcoesJudiciaisEntity'

                demonstracoesContabeisEntities:
                    type: object
                    properties:
                        balancoPatrimonial:
                            $ref: '#/components/schemas/ArquivosEntity'
                        demonstracoesResultados:
                            type: array
                            items:
                                $ref: '#/components/schemas/ArquivosEntity'
                        relatoriosGerenciais:
                            type: array
                            items:
                                $ref: '#/components/schemas/ArquivosEntity'
                        descricaoGrupo:
                            $ref: '#/components/schemas/ArquivosEntity'
                        outrosContabeis:
                            type: array
                            items:
                                $ref: '#/components/schemas/ArquivosEntity'

                relacaoCredoresEntities:
                    type: array
                    items:
                        $ref: '#/components/schemas/RelacaoCredoresEntity'
                bensDireitosRequerenteEntities:
                    $ref: '#/components/schemas/BensDireitosRequerenteEntity'


        ArquivosEntity:
            properties:
                fileEntryId:
                    format: int64
                    type: integer
                fileName:
                    type: string
                url:
                    type: string

        IdentificacaoDebitosEntity:
            properties:
                inscricaoDividaAtiva:
                    type: string
                natureza:
                    type: string
                situacao:
                    type: string
                garantidoJudicialmente:
                    type: string


        DadosContribuinteEntity:
            properties:
                qualificacao:
                    $ref: '#/components/schemas/QualificacaoCompletaEntity'
                pessoaJuridicaEntities:
                    type: array
                    items:
                        $ref: '#/components/schemas/PessoaJuridicaEntity'


        PessoaJuridicaEntity:
            properties:
                tipoPessoaJuridica:
                    type: string
                    #enum: [ Sócios
                    #Controladores
                    #Administradores
                    #Gestores
                    #Empresas do mesmo grupo econômico ]
                qualificacao:
                    $ref: '#/components/schemas/QualificacaoCompletaEntity'


        AdministradorJudicialEntity:
            properties:
                qualificacao:
                    $ref: '#/components/schemas/QualificacaoCompletaEntity'
                regimeFalencia:
                    type: boolean
                recuperacao:
                    type: string
                numeroProcesso:
                    type: string
                anexoRecuperacao:
                    $ref: '#/components/schemas/ArquivosEntity'

        QualificacaoCompletaEntity:
            properties:
                qualificacaoId:
                    format: int64
                    type: integer
                domicilioFiscal:
                    type: string
                representanteLegal:
                    type: string
                tipoPessoa:
                    type: string
                    #enum: [ "Fisica", "Juridica" ]
                nomeRazaoSocial:
                    type: string
                nomeFantasia:
                    type: string
                cpfCnpj:
                    type: string
                numeroCfdf:
                    type: string
                email:
                    type: string
                telefone:
                    type: string
                whatsapp:
                    type: string
                enderecoPostal:
                    $ref: '#/components/schemas/EnderecoEntity'

        EnderecoEntity:
            properties:
                cep:
                    type: string
                endereco:
                    type: string
                numero:
                    type: string
                estado:
                    type: string
                bairro:
                    type: string
                municipio:
                    type: string
                complemento:
                    type: string

        AdvogadoEntity:
            properties:
                advogadoId:
                    format: int64
                    type: integer
                qualificacao:
                    $ref: '#/components/schemas/QualificacaoCompletaEntity'
                numeroOab:
                    type: string
                seccional:
                    type: string
                carteirinhaOAB:
                    $ref: '#/components/schemas/ArquivosEntity'

        GarantiaDetalhadaEntity:
            properties:
                garantiaId:
                    format: int64
                    type: integer
                propostaId:
                    format: int64
                    type: integer
                tipoDevedor:
                    type: string
                tipoGarantia:
                    type: string
                outrasGarantias:
                    type: string
                descricaoBem:
                    type: string
                proprietario:
                    $ref: '#/components/schemas/QualificacaoCompletaEntity'
                valorEstimado:
                    type: number
                    format: double
                dadosRegistro:
                    type: object
                    properties:
                        matriculaImovel:
                            type: string
                        cartorioRegistro:
                            type: string
                        renavam:
                            type: string
                        outrosDocumento:
                            type: array
                            items:
                                $ref: '#/components/schemas/ArquivosEntity'
                localizacao:
                    type: string
                declaracaoAnuencia:
                    type: boolean
                declaracao:
                    $ref: '#/components/schemas/ArquivosEntity'

        DocumentoDadosRegistro:
            properties:
                documentoId:
                    format: int64
                    type: integer

        AcoesJudiciaisEntity:
            properties:
                acaoId:
                    format: int64
                    type: integer
                propostaId:
                    format: int64
                    type: integer
                numeroProcesso:
                    type: string
                orgaoTribunal:
                    type: string
                unidadeVara:
                    type: string
                parteAutora:
                    type: string
                parteRe:
                    type: string
                observacoes:
                    type: string

        DemonstracoesContabeisEntity:
            properties:
                demonstracaoId:
                    format: int64
                    type: integer
                propostaId:
                    format: int64
                    type: integer
                tipoDemonstracao:
                    type: string
                fileEntryId:
                    format: int64
                    type: integer

        RelacaoCredoresEntity:
            properties:
                credorId:
                    format: int64
                    type: integer
                propostaId:
                    format: int64
                    type: integer
                nomeCredor:
                    type: string
                naturezaCredito:
                    type: string
                   # enum: [ "Credito pessoal", "Credito empresarial" ]
                classificacaoCredito:
                    type: string
                   # enum: [ "físico", "jurídico" ]
                referenciaRegistro:
                    type: string
                valorCredito:
                    type: number
                    format: double

        LaudoAvaliacaoEntity:
            properties:
                laudoId:
                    format: int64
                    type: integer
                fileEntryId:
                    format: int64
                    type: integer

        BensDireitosRequerenteEntity:
            properties:
                bemId:
                    format: int64
                    type: integer
                propostaId:
                    format: int64
                    type: integer
                descricao:
                    type: string
                localizacao:
                    type: string
                laudoAvaliacaoEntities:
                    type: array
                    items:
                        $ref: '#/components/schemas/LaudoAvaliacaoEntity'


        ComprovanteHonorariosEntity:
            properties:
                comprovanteId:
                    format: int64
                    type: integer
                propostaId:
                    format: int64
                    type: integer
                valorPago:
                    type: number
                    format: double
                dataPagamento:
                    type: string
                    format: date
                fileEntryId:
                    format: int64
                    type: integer

        CreditosTransacionadosEntity:
            properties:
                creditoId:
                    format: int64
                    type: integer
                propostaId:
                    format: int64
                    type: integer
                percentualDescontoJuros:
                    type: number
                    format: double
                percentualDescontoPrincipal:
                    type: number
                    format: double
                observacoes:
                    type: string


        ConcessoesDfEntity:
            properties:
                concessaoId:
                    format: int64
                    type: integer
                propostaId:
                    format: int64
                    type: integer
                percentualDescontoJuros:
                    type: number
                    format: double
                percentualDescontoPrincipal:
                    type: number
                    format: double
                observacoes:
                    type: string

        EncargosEntity:
            properties:
                encargoId:
                    format: int64
                    type: integer
                propostaId:
                    format: int64
                    type: integer
                valorEncargos:
                    type: number
                    format: double
                descricaoEncargos:
                    type: string

        ParcelamentoEntity:
            properties:
                parcelamentoId:
                    format: int64
                    type: integer
                propostaId:
                    format: int64
                    type: integer
                numeroParcelas:
                    type: integer
                valorEntrada:
                    type: number
                    format: double
                dataPrimeiraParcela:
                    type: string
                    format: date
                valorPrimeiraParcela:
                    type: number
                    format: double

        TermosAssinadoEntity:
            properties:
                termosAssinadoId:
                    format: int64
                    type: integer
                propostaId:
                    format: int64
                    type: integer
                urlTermo:
                    type: string
                arquivoPdf:
                    $ref: '#/components/schemas/ArquivosEntity'
                parte:
                    type: string
                    #enum: [ "Advogado", "Credor" ]

        EditalEntity:
            properties:
                editalId:
                    format: int64
                    type: integer
                titulo:
                    type: string
                descricao:
                    type: string
                urlArquivo:
                    type: string
                dataInicio:
                    type: string
                    format: date
                dataFim:
                    type: string
                    format: date
        MetadadosFormulario:
            properties:
                editalEntities:
                    type: array
                    items:
                        $ref: '#/components/schemas/EditalEntity'
                dlFolderId:
                    format: int64
                    type: integer

        IdentificadorCreditoEntityDTO:
            type: object
            properties:
                numeroDivida:
                    type: string
                renavam:
                    type: string
                numeroDaGuia:
                    type: string
        
        UsuarioInfo:
            type: object
            properties:
                tipoLogin:
                    type: string
                cpfcnpj:
                    type: string

        DebitoSitafEntityDTO:
            type: object
            properties:
                estadoDebito:
                    type: string
                TipoDebito:
                    type: string
                codigoReceita:
                    type: string
                descricaoReceita:
                    type: string
                observacao:
                    type: string
                anoExercicio:
                    type: integer
                valorPrincipal:
                    type: number
                    format: double
                valorMulta:
                    type: number
                    format: double
                valorJuros:
                    type: number
                    format: double
                valorOutros:
                    type: number
                    format: double
                codigoSituacaoDebito:
                    type: string
                codigoRatingDivida:
                    type: string
                codigoOrgaoGerador:
                    type: string
                judicializado:
                    type: string
                identificadorCredito:
                    $ref: '#/components/schemas/IdentificadorCreditoEntityDTO'



paths:
    /sitaf/consultar-debitos:
        get:
            operationId: getDebito
            responses:
                '200':
                    description: Débito retornado
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DebitoSitafEntityDTO'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/DebitoSitafEntityDTO'
            tags: [ "Sitaf" ]

    /usuario-info:
        get:
            operationId: getUsuarioInfo
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UsuarioInfo'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/UsuarioInfo'
            tags: [ "UsuarioInfo" ]

    /propostas:
        post:
            operationId: postProposta
            summary: "Cria uma proposta"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PropostaEntity'
                    application/xml:
                        schema:
                            $ref: '#/components/schemas/PropostaEntity'
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PropostaEntity'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/PropostaEntity'
            tags: [ "PropostaEntity" ]

        get:
            operationId: getPropostasPage
            summary: "Lista propostas com filtros OData"
            parameters:
                - name: filter
                  in: query
                  required: false
                  schema:
                      type: string
                  description: "Filtro OData (ex: status eq 'Aguardando Análise')"
                - name: page
                  in: query
                  required: false
                  schema:
                      type: integer
                      default: 1
                - name: pageSize
                  in: query
                  required: false
                  schema:
                      type: integer
                      default: 20
                - name: sort
                  in: query
                  required: false
                  schema:
                      type: string
                  description: "Ordenação (ex: createDate:desc)"
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    items:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/PropostaEntity'
                                    page:
                                        type: integer
                                    pageSize:
                                        type: integer
                                    totalCount:
                                        type: integer
                                    lastPage:
                                        type: integer
                        application/xml:
                            schema:
                                type: object
                                properties:
                                    items:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/PropostaEntity'
                                    page:
                                        type: integer
                                    pageSize:
                                        type: integer
                                    totalCount:
                                        type: integer
                                    lastPage:
                                        type: integer
            tags: [ "PropostaEntity" ]
    /propostas/{propostaId}:
        get:
            operationId: getProposta
            summary: "Busca uma proposta específica"
            parameters:
                - name: propostaId
                  in: path
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PropostaEntity'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/PropostaEntity'
            tags: [ "PropostaEntity" ]
    /propostas/zip/{propostaId}:
        get:
            operationId: getPropostaZip
            summary: "Gera um ZIP da proposta e anexos"
            parameters:
                - name: propostaId
                  in: path
                  required: true
                  schema:
                      format: int64
                      type: integer
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PropostaZipEntity'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/PropostaZipEntity'
            tags: [ "PropostaZipEntity" ]

    /metadados:
        get:
            operationId: getMetadados
            summary: "Recupera os metadados para o formulário do  frontend"
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MetadadosFormulario'
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/MetadadosFormulario'
            tags: [ "EditalEntity" ]